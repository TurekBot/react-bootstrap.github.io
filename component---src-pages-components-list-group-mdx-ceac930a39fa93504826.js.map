{"version":3,"sources":["webpack:///./src/pages/components/list-group.mdx","webpack:///./src/components/Callout.js","webpack:///./src/examples/ListGroup/Default.js","webpack:///./src/examples/ListGroup/Linked.js","webpack:///./src/examples/ListGroup/Active.js","webpack:///./src/examples/ListGroup/Disabled.js","webpack:///./src/examples/ListGroup/Style.js","webpack:///./src/examples/ListGroup/StyleActions.js","webpack:///./src/examples/ListGroup/Flush.js","webpack:///./src/examples/ListGroup/Tabs.js"],"names":["query","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","className","codeText","ListGroupDefault","exampleClassName","styles","listGroup","parentName","ListGroupActive","ListGroupDisabled","ListGroupLinked","ListGroupFlush","ListGroupStyle","ListGroupStyleActions","title","ListGroupTabs","metadata","data","ListGroup","ListGroupItem","exportedBy","isMDXComponent","require","Callout","children","theme","role","module","exports"],"mappings":"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","file":"component---src-pages-components-list-group-mdx-ceac930a39fa93504826.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jjia/vendor/react-bootstrap/www/src/layouts/ApiLayout.js\";\nimport { graphql } from 'gatsby';\nimport Callout from '../../components/Callout';\nimport Heading from '../../components/Heading';\nimport ComponentApi from '../../components/ComponentApi';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport withLayout from '../../withLayout';\nimport ListGroupDefault from '../../examples/ListGroup/Default';\nimport ListGroupLinked from '../../examples/ListGroup/Linked';\nimport ListGroupActive from '../../examples/ListGroup/Active';\nimport ListGroupDisabled from '../../examples/ListGroup/Disabled';\nimport ListGroupStyle from '../../examples/ListGroup/Style';\nimport ListGroupStyleActions from '../../examples/ListGroup/StyleActions';\nimport ListGroupFlush from '../../examples/ListGroup/Flush';\nimport ListGroupTabs from '../../examples/ListGroup/Tabs';\nimport styles from '../../css/examples.module.scss';\nexport const query = graphql`\n  query ListGroupQuery {\n    ListGroup: componentMetadata(displayName: { eq: \"ListGroup\" }) {\n      ...ComponentApi_metadata\n    }\n    ListGroupItem: componentMetadata(displayName: { eq: \"ListGroupItem\" }) {\n      ...ComponentApi_metadata\n    }\n    ListGroupItemAction: componentMetadata(\n      displayName: { eq: \"ListGroupItemAction\" }\n    ) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"list-groups\"\n    }}>{`List groups`}</h1>\n    <p className=\"lead\">\n  List groups are a flexible and powerful component for displaying a\n  series of content. Modify and extend them to support just about any\n  content within.\n    </p>\n    <h2 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h2>\n    <ReactPlayground codeText={ListGroupDefault} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"active-items\"\n    }}>{`Active items`}</h3>\n    <p>{`Set the `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` prop to indicate the list groups current active selection.`}</p>\n    <ReactPlayground codeText={ListGroupActive} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"disabled-items\"\n    }}>{`Disabled items`}</h3>\n    <p>{`Set the `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{` prop to prevent actions on a `}<inlineCode parentName=\"p\">{`<List.Item>`}</inlineCode>{`. For elements\nthat aren't naturally disable-able (like anchors) `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` handlers are added\nthat call `}<inlineCode parentName=\"p\">{`preventDefault`}</inlineCode>{` to mimick disabled behavior.`}</p>\n    <ReactPlayground codeText={ListGroupDisabled} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"actionable-items\"\n    }}>{`Actionable items`}</h3>\n    <p>{`Toggle the `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{` prop to create `}<em>{`actionable`}</em>{` list group\nitems, with disabled, hover and active styles. List item actions will render\na `}<inlineCode parentName=\"p\">{`<button>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<a>`}</inlineCode>{` (depending on the presence of an `}<inlineCode parentName=\"p\">{`href`}</inlineCode>{`) by default but\ncan be overridden by setting the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop as usual.`}</p>\n    <p>{`List items `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` are distinct from plain items to ensure that click or tap\naffordances aren't applied to non-interactive items.`}</p>\n    <ReactPlayground codeText={ListGroupLinked} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"flush\"\n    }}>{`Flush`}</h3>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`flush`}</inlineCode>{` variant to remove outer borders and rounded corners to render list group items\nedge-to-edge in a parent container `}<a parentName=\"p\" {...{\n        \"href\": \"/components/cards/#list-groups\"\n      }}>{`such as a `}<inlineCode parentName=\"a\">{`Card`}</inlineCode></a>{`.`}</p>\n    <ReactPlayground codeText={ListGroupFlush} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h3 {...{\n      \"id\": \"contextual-classes\"\n    }}>{`Contextual classes`}</h3>\n    <p>{`Use contextual variants on `}<inlineCode parentName=\"p\">{`<List.Item>`}</inlineCode>{`s to style them with a stateful background and color.`}</p>\n    <ReactPlayground codeText={ListGroupStyle} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <p>{`When paired with `}<inlineCode parentName=\"p\">{`action`}</inlineCode>{`s, additional hover and active styles apply.`}</p>\n    <ReactPlayground codeText={ListGroupStyleActions} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <Callout title=\"Conveying meaning to assistive technologies\" mdxType=\"Callout\">\n  Using color to add meaning only provides a visual indication,\n  which will not be conveyed to users of assistive technologies â€“ such as screen readers.\n  Ensure that information denoted by the color is either obvious from the content itself\n  (e.g. the visible text), or is included through alternative means,\n  such as additional text hidden with the <code>.sr-only</code> class.\n    </Callout>\n    <h2 {...{\n      \"id\": \"tabbed-interfaces\"\n    }}>{`Tabbed Interfaces`}</h2>\n    <p>{`You can also use the `}<a parentName=\"p\" {...{\n        \"href\": \"/components/tabs/\"\n      }}>{`Tab`}</a>{` components to create ARIA compliant tabbable\ninterfaces with the `}<inlineCode parentName=\"p\">{`<ListGroup>`}</inlineCode>{` component. Swap out the `}<inlineCode parentName=\"p\">{`<Nav>`}</inlineCode>{` component\nfor the list group and you are good to go.`}</p>\n    <ReactPlayground codeText={ListGroupTabs} exampleClassName={styles.listGroup} mdxType=\"ReactPlayground\" />\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <ComponentApi metadata={props.data.ListGroup} mdxType=\"ComponentApi\" />\n    <ComponentApi metadata={props.data.ListGroupItem} exportedBy={props.data.ListGroup} mdxType=\"ComponentApi\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PropTypes from 'prop-types';\nimport React from 'react';\n\n\n\nconst styles = require('./Callout-styles.module.scss');\n\nconst propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n  theme: PropTypes.oneOf(['danger', 'warning']),\n};\n\nfunction Callout({ title, children, theme }) {\n  return (\n    <aside role=\"note\" className={styles[theme || 'warning']}>\n      {title && <header className=\"h5\">{title}</header>}\n      <div>{children}</div>\n    </aside>\n  );\n}\n\nCallout.propTypes = propTypes;\n\nexport default Callout;\n","module.exports = \"<ListGroup>\\n  <ListGroup.Item>Cras justo odio</ListGroup.Item>\\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\\n  <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"function alertClicked() {\\n  alert('You clicked the third ListGroupItem');\\n}\\n\\nrender(\\n  <ListGroup defaultActiveKey=\\\"#link1\\\">\\n    <ListGroup.Item action href=\\\"#link1\\\">\\n      Link 1\\n    </ListGroup.Item>\\n    <ListGroup.Item action href=\\\"#link2\\\" disabled>\\n      Link 2\\n    </ListGroup.Item>\\n    <ListGroup.Item action onClick={alertClicked}>\\n      This one is a button\\n    </ListGroup.Item>\\n  </ListGroup>,\\n);\\n\"","module.exports = \"<ListGroup as=\\\"ul\\\">\\n  <ListGroup.Item as=\\\"li\\\" active>\\n    Cras justo odio\\n  </ListGroup.Item>\\n  <ListGroup.Item as=\\\"li\\\">Dapibus ac facilisis in</ListGroup.Item>\\n  <ListGroup.Item as=\\\"li\\\" disabled>\\n    Morbi leo risus\\n  </ListGroup.Item>\\n  <ListGroup.Item as=\\\"li\\\">Porta ac consectetur ac</ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"<ListGroup>\\n  <ListGroup.Item disabled>Cras justo odio</ListGroup.Item>\\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"<ListGroup>\\n  <ListGroup.Item>No style</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"primary\\\">Primary</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"secondary\\\">Secondary</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"success\\\">Success</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"danger\\\">Danger</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"warning\\\">Warning</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"info\\\">Info</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"light\\\">Light</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"dark\\\">Dark</ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"<ListGroup>\\n  <ListGroup.Item>No style</ListGroup.Item>\\n  <ListGroup.Item variant=\\\"primary\\\">Primary</ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"secondary\\\">\\n    Secondary\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"success\\\">\\n    Success\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"danger\\\">\\n    Danger\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"warning\\\">\\n    Warning\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"info\\\">\\n    Info\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"light\\\">\\n    Light\\n  </ListGroup.Item>\\n  <ListGroup.Item action variant=\\\"dark\\\">\\n    Dark\\n  </ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"<ListGroup variant=\\\"flush\\\">\\n  <ListGroup.Item>Cras justo odio</ListGroup.Item>\\n  <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\\n  <ListGroup.Item>Morbi leo risus</ListGroup.Item>\\n  <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\\n</ListGroup>;\\n\"","module.exports = \"<Tab.Container id=\\\"list-group-tabs-example\\\" defaultActiveKey=\\\"#link1\\\">\\n  <Row>\\n    <Col sm={4}>\\n      <ListGroup>\\n        <ListGroup.Item action href=\\\"#link1\\\">\\n          Link 1\\n        </ListGroup.Item>\\n        <ListGroup.Item action href=\\\"#link2\\\">\\n          Link 2\\n        </ListGroup.Item>\\n      </ListGroup>\\n    </Col>\\n    <Col sm={8}>\\n      <Tab.Content>\\n        <Tab.Pane eventKey=\\\"#link1\\\">\\n          <Sonnet />\\n        </Tab.Pane>\\n        <Tab.Pane eventKey=\\\"#link2\\\">\\n          <Sonnet />\\n        </Tab.Pane>\\n      </Tab.Content>\\n    </Col>\\n  </Row>\\n</Tab.Container>;\\n\""],"sourceRoot":""}