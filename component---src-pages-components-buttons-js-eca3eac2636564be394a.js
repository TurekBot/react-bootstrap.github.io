webpackJsonp(["component---src-pages-components-buttons-js"],{"./node_modules/babel-loader/lib/index.js??ref--0-0!./src/pages/components/buttons.js":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=t.data;return o.a.createElement("div",{className:"bs-docs-section"},o.a.createElement("h1",{className:"page-header"},o.a.createElement(l.a,{id:"buttons"},"Buttons")," ",o.a.createElement("small",null,"Button")),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-options"},"Options")),o.a.createElement("p",null,"Use any of the available button style types to quickly create a styled button. Just modify the ",o.a.createElement("code",null,"bsStyle")," prop."),o.a.createElement(u.a,{codeText:c.a}),o.a.createElement("div",{className:"bs-callout bs-callout-warning"},o.a.createElement("h4",null,"Button spacing"),o.a.createElement("p",null,"Because React doesn't output newlines between elements, buttons on the same line are displayed flush against each other. To preserve the spacing between multiple inline buttons, wrap your button group in"," ",o.a.createElement("code",null,"<ButtonToolbar />"),".")),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-sizes"},"Sizes")),o.a.createElement("p",null,"Fancy larger or smaller buttons? Add ",o.a.createElement("code",null,'bsSize="large"'),","," ",o.a.createElement("code",null,'bsSize="small"'),", or ",o.a.createElement("code",null,'bsSize="xsmall"')," for additional sizes."),o.a.createElement(u.a,{codeText:b.a}),o.a.createElement("p",null,"Create block level buttons—those that span the full width of a parent— by adding the ",o.a.createElement("code",null,"block")," prop."),o.a.createElement(u.a,{codeText:p.a}),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-active"},"Active state")),o.a.createElement("p",null,"To set a buttons active state simply set the components"," ",o.a.createElement("code",null,"active")," prop."),o.a.createElement(u.a,{codeText:h.a}),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-tags"},"Button tags")),o.a.createElement("p",null,"The DOM element tag is choosen automatically for you based on the props you supply. Passing a ",o.a.createElement("code",null,"href")," will result in the button using a ",o.a.createElement("code",null,"<a />")," element otherwise a ",o.a.createElement("code",null,"<button />")," ","element will be used."),o.a.createElement(u.a,{codeText:y.a}),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-disabled"},"Disabled state")),o.a.createElement("p",null,"Make buttons look unclickable by fading them back 50%. To do this add the ",o.a.createElement("code",null,"disabled")," attribute to buttons."),o.a.createElement(u.a,{codeText:x.a}),o.a.createElement("div",{className:"bs-callout bs-callout-warning"},o.a.createElement("h4",null,"Cross-Browser compatibility"),o.a.createElement("p",null,"Because ",o.a.createElement("code",null,"<Button />")," will render an"," ",o.a.createElement("code",null,"<a>")," tag in certain situations. Since anchor tags can't be ",o.a.createElement("code",null,"disabled"),", the behavior is emulated as best it can be. Specifically, ",o.a.createElement("code",null,"pointer-events: none;")," style is added to the anchor to prevent focusing, which is only supported in newer browser versions.")),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-loading"},"Button loading state")),o.a.createElement("p",null,"When activating an asynchronous action from a button it is a good UX pattern to give the user feedback as to the loading state, this can easily be done by updating your ",o.a.createElement("code",null,"<Button />"),"’s props from a state change like below."),o.a.createElement(u.a,{codeText:f.a}),o.a.createElement("h3",null,o.a.createElement(l.a,{id:"buttons-props"},"Props"),o.a.createElement(s.a,{component:e.metadata.displayName})),o.a.createElement(r.a,{metadata:e.metadata}))},n.d(e,"query",function(){return T});var a=n("./node_modules/react/index.js"),o=n.n(a),l=n("./src/components/Anchor.js"),s=n("./src/components/LinkToSource.js"),r=n("./src/components/PropTable.js"),u=n("./src/components/ReactPlayground.js"),i=n("./src/examples/ButtonTypes.js"),c=n.n(i),d=n("./src/examples/ButtonSizes.js"),b=n.n(d),m=n("./src/examples/ButtonBlock.js"),p=n.n(m),B=n("./src/examples/ButtonActive.js"),h=n.n(B),g=n("./src/examples/ButtonTagTypes.js"),y=n.n(g),E=n("./src/examples/ButtonDisabled.js"),x=n.n(E),S=n("./src/examples/ButtonLoading.js"),f=n.n(S);var T="** extracted graphql fragment **"},"./src/examples/ButtonActive.js":function(t,e){t.exports='<ButtonToolbar>\n  <Button bsStyle="primary" bsSize="large" active>\n    Primary button\n  </Button>\n  <Button bsSize="large" active>\n    Button\n  </Button>\n</ButtonToolbar>;\n'},"./src/examples/ButtonBlock.js":function(t,e){t.exports='const wellStyles = { maxWidth: 400, margin: \'0 auto 10px\' };\n\nconst buttonsInstance = (\n  <div className="well" style={wellStyles}>\n    <Button bsStyle="primary" bsSize="large" block>\n      Block level button\n    </Button>\n    <Button bsSize="large" block>\n      Block level button\n    </Button>\n  </div>\n);\n\nrender(buttonsInstance);\n'},"./src/examples/ButtonDisabled.js":function(t,e){t.exports='<ButtonToolbar>\n  <Button bsStyle="primary" bsSize="large" disabled>\n    Primary button\n  </Button>\n  <Button bsSize="large" disabled>\n    Button\n  </Button>\n</ButtonToolbar>;\n'},"./src/examples/ButtonLoading.js":function(t,e){t.exports="class LoadingButton extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  handleClick() {\n    this.setState({ isLoading: true });\n\n    // This probably where you would have an `ajax` call\n    setTimeout(() => {\n      // Completed of async action, set loading state back\n      this.setState({ isLoading: false });\n    }, 2000);\n  }\n\n  render() {\n    const { isLoading } = this.state;\n\n    return (\n      <Button\n        bsStyle=\"primary\"\n        disabled={isLoading}\n        onClick={!isLoading ? this.handleClick : null}\n      >\n        {isLoading ? 'Loading...' : 'Loading state'}\n      </Button>\n    );\n  }\n}\n\nrender(<LoadingButton />);\n"},"./src/examples/ButtonSizes.js":function(t,e){t.exports='<div>\n  <ButtonToolbar>\n    <Button bsStyle="primary" bsSize="large">\n      Large button\n    </Button>\n    <Button bsSize="large">Large button</Button>\n  </ButtonToolbar>\n  <ButtonToolbar>\n    <Button bsStyle="primary">Default button</Button>\n    <Button>Default button</Button>\n  </ButtonToolbar>\n  <ButtonToolbar>\n    <Button bsStyle="primary" bsSize="small">\n      Small button\n    </Button>\n    <Button bsSize="small">Small button</Button>\n  </ButtonToolbar>\n  <ButtonToolbar>\n    <Button bsStyle="primary" bsSize="xsmall">\n      Extra small button\n    </Button>\n    <Button bsSize="xsmall">Extra small button</Button>\n  </ButtonToolbar>\n</div>;\n'},"./src/examples/ButtonTagTypes.js":function(t,e){t.exports='<ButtonToolbar>\n  <Button href="#">Link</Button>\n  <Button>Button</Button>\n</ButtonToolbar>;\n'},"./src/examples/ButtonTypes.js":function(t,e){t.exports='<ButtonToolbar>\n  {/* Standard button */}\n  <Button>Default</Button>\n\n  {/* Provides extra visual weight and identifies the primary action in a set of buttons */}\n  <Button bsStyle="primary">Primary</Button>\n\n  {/* Indicates a successful or positive action */}\n  <Button bsStyle="success">Success</Button>\n\n  {/* Contextual button for informational alert messages */}\n  <Button bsStyle="info">Info</Button>\n\n  {/* Indicates caution should be taken with this action */}\n  <Button bsStyle="warning">Warning</Button>\n\n  {/* Indicates a dangerous or potentially negative action */}\n  <Button bsStyle="danger">Danger</Button>\n\n  {/* Deemphasize a button by making it look like a link while maintaining button behavior */}\n  <Button bsStyle="link">Link</Button>\n</ButtonToolbar>;\n'}});
//# sourceMappingURL=component---src-pages-components-buttons-js-eca3eac2636564be394a.js.map