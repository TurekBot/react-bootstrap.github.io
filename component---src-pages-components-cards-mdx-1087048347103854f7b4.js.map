{"version":3,"sources":["webpack:///./src/pages/components/cards.mdx","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/components/LinkToSource-Link.module.scss?c9bf","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/lodash/sortBy.js","webpack:///./node_modules/lodash/_baseOrderBy.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_baseSortBy.js","webpack:///./node_modules/lodash/_compareMultiple.js","webpack:///./node_modules/lodash/_compareAscending.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./src/components/PropTable-Code.module.scss?d382","webpack:///./src/components/PropTable-PropDescription.module.scss?ab18","webpack:///./src/components/ComponentApi-Keyword.module.scss?69fb","webpack:///./src/components/ComponentApi-Code.module.scss?99e0","webpack:///./src/components/LinkToSource.js","webpack:///./src/components/PropTable.js","webpack:///./src/components/ComponentApi.js","webpack:///./src/examples/Card/Basic.js","webpack:///./src/examples/Card/BgColor.js","webpack:///./src/examples/Card/BodyOnly.js","webpack:///./src/examples/Card/BodyShorthand.js","webpack:///./src/examples/Card/Border.js","webpack:///./src/examples/Card/Columns.js","webpack:///./src/examples/Card/Deck.js","webpack:///./src/examples/Card/Group.js","webpack:///./src/examples/Card/HeaderAndFooter.js","webpack:///./src/examples/Card/ImageAndText.js","webpack:///./src/examples/Card/ImgOverlay.js","webpack:///./src/examples/Card/KitchenSink.js","webpack:///./src/examples/Card/ListGroups.js","webpack:///./src/examples/Card/ListGroupWithHeader.js","webpack:///./src/examples/Card/NavPills.js","webpack:///./src/examples/Card/NavTabs.js","webpack:///./src/examples/Card/Text.js","webpack:///./src/examples/Card/WithHeader.js","webpack:///./src/examples/Card/WithHeaderAndQuote.js","webpack:///./src/examples/Card/WithHeaderStyled.js"],"names":["query","components","props","CardBasic","CardBodyOnly","CardBodyShorthand","CardText","CardListGroups","CardListGroupWithHeader","CardKitchenSink","CardWithHeader","CardWithHeaderStyled","CardWithHeaderAndQuote","CardHeaderAndFooter","CardImageAndText","CardImgOverlay","CardNavTabs","CardNavPills","CardBgColor","CardBorder","CardGroup","CardDeck","CardColumns","data","Card","CardBody","CardImg","_frontmatter","Link","component","linkToComponentOnGitHub","Code","PropDescription","cleanDocletValue","str","trim","replace","getDisplayTypeName","typeName","getTypeName","prop","type","name","doclets","raw","getType","value","reduce","current","val","i","list","item","isValidElement","cloneElement","key","concat","length","child","renderEnum","_renderRows","propsData","_","filter","private","ignore","map","propData","description","descHtml","childMarkdownRemark","html","renderRequiredBadge","renderDefaultValue","deprecated","renderControllableNote","__html","defaultValue","propName","controllable","isHandler","text","enumType","enumValues","Array","isArray","renderedEnumValues","forEach","push","required","render","metadata","Component","propTypes","object","isRequired","metadataFragment","Keyword","Import","ComponentApi","heading","exportedBy","displayName","importName","split","pop","id","module","exports"],"mappings":"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nB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,uBAAuB,mBAAO,CAAC,GAAqB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,mBAAmB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3CA,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxCA,eAAe,mBAAO,CAAC,GAAY;AACnC,eAAe,mBAAO,CAAC,GAAa;AACpC,kBAAkB,mBAAO,CAAC,GAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,SAAS,mBAAO,CAAC,GAAM;AACvB,kBAAkB,mBAAO,CAAC,GAAe;AACzC,cAAc,mBAAO,CAAC,GAAY;AAClC,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA;AACA,kBAAkB,6C;;;;;;;ACDlB;AACA,kBAAkB,+E;;;;;;;ACDlB;AACA,kBAAkB,yD;;;;;;;ACDlB;AACA,kBAAkB,gD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"component---src-pages-components-cards-mdx-1087048347103854f7b4.js","sourcesContent":["import React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\n\n\nimport DefaultLayout from \"/Users/jason/src/react-bootstrap/www/src/layouts/ApiLayout.js\"\nimport { graphql } from 'gatsby';\nimport ComponentApi from '../../components/ComponentApi';\nimport LinkedHeading from '../../components/LinkedHeading';\nimport ReactPlayground from '../../components/ReactPlayground';\nimport CardBasic from '../../examples/Card/Basic';\nimport CardBgColor from '../../examples/Card/BgColor';\nimport CardBodyOnly from '../../examples/Card/BodyOnly';\nimport CardBodyShorthand from '../../examples/Card/BodyShorthand';\nimport CardBorder from '../../examples/Card/Border';\nimport CardColumns from '../../examples/Card/Columns';\nimport CardDeck from '../../examples/Card/Deck';\nimport CardGroup from '../../examples/Card/Group';\nimport CardHeaderAndFooter from '../../examples/Card/HeaderAndFooter';\nimport CardImageAndText from '../../examples/Card/ImageAndText';\nimport CardImgOverlay from '../../examples/Card/ImgOverlay';\nimport CardKitchenSink from '../../examples/Card/KitchenSink';\nimport CardListGroups from '../../examples/Card/ListGroups';\nimport CardListGroupWithHeader from '../../examples/Card/ListGroupWithHeader';\nimport CardNavPills from '../../examples/Card/NavPills';\nimport CardNavTabs from '../../examples/Card/NavTabs';\nimport CardText from '../../examples/Card/Text';\nimport CardWithHeader from '../../examples/Card/WithHeader';\nimport CardWithHeaderAndQuote from '../../examples/Card/WithHeaderAndQuote';\nimport CardWithHeaderStyled from '../../examples/Card/WithHeaderStyled';\nexport const query = graphql`\n  query CardQuery {\n    Card: componentMetadata(displayName: { eq: \"Card\" }) {\n      ...ComponentApi_metadata\n    }\n    CardBody: componentMetadata(displayName: { eq: \"CardBody\" }) {\n      ...ComponentApi_metadata\n    }\n    CardImg: componentMetadata(displayName: { eq: \"CardImg\" }) {\n      ...ComponentApi_metadata\n    }\n    CardImgOverlay: componentMetadata(displayName: { eq: \"CardImgOverlay\" }) {\n      ...ComponentApi_metadata\n    }\n    CardDeck: componentMetadata(displayName: { eq: \"CardDeck\" }) {\n      ...ComponentApi_metadata\n    }\n    CardGroup: componentMetadata(displayName: { eq: \"CardGroup\" }) {\n      ...ComponentApi_metadata\n    }\n  }\n`;\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={DefaultLayout} layoutProps={props} components={components}>\n\n\n\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"cards\"}}>{`Cards`}</MDXTag>\n<p className=\"lead\">\n  Bootstrap’s cards provide a flexible and extensible content container\n  with multiple variants and options.\n</p>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-example\"}}>{`Basic Example`}</MDXTag>\n<ReactPlayground codeText={CardBasic} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"content-types\"}}>{`Content types`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"body\"}}>{`Body`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Body>`}</MDXTag>{` to pad content inside a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card>`}</MDXTag>{`.`}</MDXTag>\n<ReactPlayground codeText={CardBodyOnly} />\n<MDXTag name=\"p\" components={components}>{`Alernatively, you can use this shorthand version for Cards with body\nonly, and no other children`}</MDXTag>\n<ReactPlayground codeText={CardBodyShorthand} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"title-text-and-links\"}}>{`Title, text, and links`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Using `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Title>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Subtitle>`}</MDXTag>{`, and\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Text>`}</MDXTag>{` inside the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Body>`}</MDXTag>{` will line them up nicely.\n`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Link>`}</MDXTag>{`s are used to line up links next to each other.`}</MDXTag>\n<ReactPlayground codeText={CardText} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"list-groups\"}}>{`List Groups`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Create lists of content in a card with a flush list group.`}</MDXTag>\n<ReactPlayground codeText={CardListGroups} />\n<ReactPlayground codeText={CardListGroupWithHeader} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"kitchen-sink\"}}>{`Kitchen Sink`}</MDXTag>\n<ReactPlayground codeText={CardKitchenSink} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"header-and-footer\"}}>{`Header and Footer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You may add a header by adding a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Card.Header>`}</MDXTag>{` component.`}</MDXTag>\n<ReactPlayground codeText={CardWithHeader} />\n<MDXTag name=\"p\" components={components}>{`A `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<CardHeader>`}</MDXTag>{` can be styled by passing a heading element\nthrough the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<as>`}</MDXTag>{` prop`}</MDXTag>\n<ReactPlayground codeText={CardWithHeaderStyled} />\n<ReactPlayground codeText={CardWithHeaderAndQuote} />\n<ReactPlayground codeText={CardHeaderAndFooter} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"images\"}}>{`Images`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Cards include a few options for working with images. Choose from\nappending “image caps” at either end of a card, overlaying images with\ncard content, or simply embedding the image in a card.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"image-caps\"}}>{`Image caps`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Similar to headers and footers, cards can include top and bottom “image\ncaps”—images at the top or bottom of a card.`}</MDXTag>\n<ReactPlayground codeText={CardImageAndText} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"image-overlays\"}}>{`Image Overlays`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Turn an image into a card background and overlay your card’s text.\nDepending on the image, you may or may not need additional styles or\nutilities.`}</MDXTag>\n<ReactPlayground codeText={CardImgOverlay} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"navigation\"}}>{`Navigation`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Add some navigation to a card’s header (or block) with React Bootstrap’s\n`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"../navs\"}}>{`Nav`}</MDXTag>{` components.`}</MDXTag>\n<ReactPlayground codeText={CardNavTabs} />\n<ReactPlayground codeText={CardNavPills} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-styles\"}}>{`Card Styles`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"background-color\"}}>{`Background Color`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can change a card's appearance by changing their `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<bg>`}</MDXTag>{`, and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<text>`}</MDXTag>{` props.`}</MDXTag>\n<ReactPlayground codeText={CardBgColor} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"border-color\"}}>{`Border Color`}</MDXTag>\n<ReactPlayground codeText={CardBorder} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"card-layout\"}}>{`Card layout`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"card-groups\"}}>{`Card Groups`}</MDXTag>\n<ReactPlayground codeText={CardGroup} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"card-deck\"}}>{`Card Deck`}</MDXTag>\n<ReactPlayground codeText={CardDeck} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"card-columns\"}}>{`Card Columns`}</MDXTag>\n<ReactPlayground codeText={CardColumns} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"api\"}}>{`API`}</MDXTag>\n<ComponentApi metadata={props.data.Card} />\n<ComponentApi metadata={props.data.CardBody} exportedBy={props.data.Card} />\n<ComponentApi metadata={props.data.CardImg} exportedBy={props.data.Card} />\n<ComponentApi metadata={props.data.CardImgOverlay} exportedBy={props.data.Card} />\n<ComponentApi metadata={props.data.CardDeck} />\n<ComponentApi metadata={props.data.CardGroup} />\n</MDXTag>\n\nexport const _frontmatter = {};\n\n  ","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkToSource-Link-module--link--3LrCN\"};","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"PropTable-Code-module--code--FStF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"propDescription\":\"PropTable-PropDescription-module--prop-description--WLXmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyword\":\"ComponentApi-Keyword-module--keyword--1daqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"ComponentApi-Code-module--code--3OYmz\"};","import React from 'react';\nimport { styled } from 'css-literal-loader/styled';\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/lib/Tooltip';\n\nimport { version } from '../../../package.json';\n\nconst Link = styled('a', \"Link\", require(\"./LinkToSource-Link.module.scss\"), \"link\", \"link\");\n\nexport default props => {\n  const { component } = props;\n  const linkToComponentOnGitHub = `//github.com/react-bootstrap/react-bootstrap/tree/v${version}/src/${component}.js`;\n\n  return (\n    <OverlayTrigger\n      overlay={\n        <Tooltip id={`view-${component}-source-tooltip`}>\n          View source file\n        </Tooltip>\n      }\n    >\n      <Link href={linkToComponentOnGitHub} className=\"js-search-exclude\">\n        <i className=\"fas fa-code\" />\n        <span className=\"sr-only\">view source file</span>\n      </Link>\n    </OverlayTrigger>\n  );\n};\n","import { graphql } from 'gatsby';\n\nimport sortBy from 'lodash/sortBy';\nimport capitalize from 'lodash/capitalize';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Badge from 'react-bootstrap/lib/Badge';\nimport Table from 'react-bootstrap/lib/Table';\n\nimport { styled } from 'css-literal-loader/styled';\n\nconst Code = styled('code', \"Code\", require(\"./PropTable-Code.module.scss\"), \"code\", \"code\");\n\nconst PropDescription = styled('div', \"PropDescription\", require(\"./PropTable-PropDescription.module.scss\"), \"prop-description\", \"propDescription\");\n\nfunction cleanDocletValue(str) {\n  return str\n    .trim()\n    .replace(/^\\{/, '')\n    .replace(/\\}$/, '');\n}\nfunction getDisplayTypeName(typeName) {\n  if (typeName === 'func') return 'function';\n  if (typeName === 'bool') return 'boolean';\n\n  return typeName;\n}\nfunction getTypeName(prop) {\n  const type = prop.type || {};\n  let name = getDisplayTypeName(type.name);\n  let doclets = prop.doclets || {};\n  if (name === 'custom') return cleanDocletValue(doclets.type || type.raw);\n  return name;\n}\n\nclass PropTable extends React.Component {\n  static propTypes = {\n    metadata: PropTypes.object.isRequired,\n  };\n\n  getType(prop) {\n    let type = prop.type || {};\n    let name = getDisplayTypeName(type.name);\n    let doclets = prop.doclets || {};\n\n    switch (name) {\n      case 'object':\n        return name;\n      case 'union':\n        return type.value.reduce((current, val, i, list) => {\n          let item = this.getType({ type: val });\n          if (React.isValidElement(item)) {\n            item = React.cloneElement(item, { key: i });\n          }\n          current = current.concat(item);\n\n          return i === list.length - 1 ? current : current.concat(' | ');\n        }, []);\n      case 'array': {\n        let child = this.getType({ type: type.value });\n\n        return (\n          <span>\n            {'array<'}\n            {child}\n            {'>'}\n          </span>\n        );\n      }\n      case 'enum':\n        return this.renderEnum(type);\n      case 'custom':\n        return cleanDocletValue(doclets.type || type.raw);\n      default:\n        return name;\n    }\n  }\n\n  _renderRows(propsData) {\n    return sortBy(propsData, _ => (_.name === 'bsPrefix' ? 'zzzzzz' : _.name))\n      .filter(\n        prop => prop.type && !prop.doclets.private && !prop.doclets.ignore,\n      )\n      .map(propData => {\n        const { name, description, doclets } = propData;\n        let descHtml = description && description.childMarkdownRemark.html;\n\n        return (\n          <tr key={name} className=\"prop-table-row\">\n            <td className=\"text-monospace\">\n              {name} {this.renderRequiredBadge(propData)}\n            </td>\n            <td className=\"text-monospace\">\n              <div>{this.getType(propData)}</div>\n            </td>\n\n            <td>{this.renderDefaultValue(propData)}</td>\n\n            <td>\n              {doclets.deprecated && (\n                <div className=\"mb-1\">\n                  <strong className=\"text-danger\">\n                    {`Deprecated: ${doclets.deprecated} `}\n                  </strong>\n                </div>\n              )}\n              {this.renderControllableNote(propData, name)}\n              <PropDescription dangerouslySetInnerHTML={{ __html: descHtml }} />\n            </td>\n          </tr>\n        );\n      });\n  }\n\n  renderDefaultValue(prop) {\n    let value = prop.defaultValue && prop.defaultValue.value;\n    if (value == null) return null;\n    if (getTypeName(prop) === 'elementType')\n      value = `<${value.replace(/('|\")/g, '')}>`;\n    return <Code>{value}</Code>;\n  }\n\n  renderControllableNote(prop, propName) {\n    let controllable = prop.doclets.controllable;\n    let isHandler = getDisplayTypeName(prop.type.name) === 'function';\n\n    if (!controllable) {\n      return false;\n    }\n\n    let text = isHandler ? (\n      <span>\n        controls <code>{controllable}</code>\n      </span>\n    ) : (\n      <span>\n        controlled by: <Code>{controllable}</Code>, initial prop:{' '}\n        <Code>{`default${capitalize(propName)}`}</Code>\n      </span>\n    );\n\n    return (\n      <div className=\"mb-2\">\n        <small>\n          <em className=\"text-info\">{text}</em>\n        </small>\n      </div>\n    );\n  }\n\n  renderEnum(enumType) {\n    const enumValues = enumType.value || [];\n    if (!Array.isArray(enumValues)) return enumValues;\n\n    const renderedEnumValues = [];\n    enumValues.forEach(({ value }, i) => {\n      if (i > 0) {\n        renderedEnumValues.push(<span key={`${i}c`}> | </span>);\n      }\n\n      renderedEnumValues.push(<code key={i}>{value}</code>);\n    });\n\n    return <span>{renderedEnumValues}</span>;\n  }\n\n  renderRequiredBadge(prop) {\n    if (!prop.required) {\n      return null;\n    }\n\n    return <Badge>required</Badge>;\n  }\n\n  render() {\n    let propsData = this.props.metadata.props || [];\n\n    if (!propsData.length) {\n      return (\n        <div className=\"text-muted\">\n          <em>There are no public props for this component.</em>\n        </div>\n      );\n    }\n\n    return (\n      <Table bordered striped className=\"bg-white mt-4 mb-5\" responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Default</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>{this._renderRows(propsData)}</tbody>\n      </Table>\n    );\n  }\n}\n\nexport const metadataFragment = graphql`\n  fragment Description_markdown on ComponentDescription {\n    childMarkdownRemark {\n      html\n    }\n  }\n\n  fragment PropTable_metadata on ComponentMetadata {\n    composes\n    displayName\n    description {\n      ...Description_markdown\n    }\n    props {\n      name\n      doclets\n      defaultValue {\n        value\n        computed\n      }\n      description {\n        ...Description_markdown\n      }\n      required\n      type {\n        name\n        value\n        raw\n      }\n    }\n  }\n`;\n\nexport default PropTable;\n","import { graphql } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport { styled } from 'css-literal-loader/styled';\n\nimport Heading from './Heading';\nimport Anchor from './Anchor';\nimport LinkToSource from './LinkToSource';\nimport PropTable from './PropTable';\n\nconst Keyword = styled('span', \"Keyword\", require(\"./ComponentApi-Keyword.module.scss\"), \"keyword\", \"keyword\");\nconst Code = styled('code', \"Code\", require(\"./ComponentApi-Code.module.scss\"), \"code\", \"code\");\n\nconst propTypes = {};\n\nconst Import = ({ name }) => (\n  <Code aria-label={`Import code for the ${name} component`}>\n    <Keyword>import</Keyword> {name} <Keyword>from</Keyword>{' '}\n    'react-bootstrap/lib/{name}'\n  </Code>\n);\n\nfunction ComponentApi({ heading, metadata, exportedBy }) {\n  let { description, displayName: name } = metadata;\n  let descHtml = description && description.childMarkdownRemark.html;\n  let importName = name;\n\n  if (exportedBy) {\n    name = `${exportedBy.displayName}.${name\n      .split(exportedBy.displayName)\n      .pop()}`;\n    importName = exportedBy.displayName;\n  }\n\n  const id = `${kebabCase(name)}-props`;\n  return (\n    <>\n      <Heading h={heading || '3'} id={id} title={name} className=\"my-3\">\n        <div className=\"d-flex align-items-center\">\n          <Anchor target={id}>\n            <span className=\" text-monospace\">{name}</span>\n          </Anchor>\n\n          <span className=\"ml-auto\" />\n          <LinkToSource component={name} />\n        </div>\n      </Heading>\n\n      <Import name={importName} />\n      {/* use composes here */}\n      {descHtml && <div dangerouslySetInnerHTML={{ __html: descHtml }} />}\n      <PropTable metadata={metadata} />\n    </>\n  );\n}\n\nComponentApi.propTypes = propTypes;\n\nexport default ComponentApi;\n\nexport const metadataFragment = graphql`\n  fragment ComponentApi_metadata on ComponentMetadata {\n    composes\n    displayName\n    description {\n      childMarkdownRemark {\n        html\n      }\n    }\n    ...PropTable_metadata\n  }\n`;\n","module.exports = \"<Card style={{ width: '18rem' }}>\\n  <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px180\\\" />\\n  <Card.Body>\\n    <Card.Title>Card Title</Card.Title>\\n    <Card.Text>\\n      Some quick example text to build on the card title and make up the bulk of\\n      the card's content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<>\\n  <Card bg=\\\"primary\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Primary Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"secondary\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Secondary Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"success\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Success Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"danger\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Danger Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"warning\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Warning Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"info\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Info Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"dark\\\" text=\\\"white\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Dark Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card bg=\\\"light\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Light Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n</>;\\n\"","module.exports = \"<Card>\\n  <Card.Body>This is some text within a card body.</Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card body>This is some text within a card body.</Card>;\\n\"","module.exports = \"<>\\n  <Card border=\\\"primary\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Primary Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"secondary\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Secondary Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"success\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Success Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"danger\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Danger Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"warning\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Warning Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"info\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Info Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"dark\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Dark Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n\\n  <Card border=\\\"light\\\" style={{ width: '18rem' }}>\\n    <Card.Header>Header</Card.Header>\\n    <Card.Body>\\n      <Card.Title>Light Card Title</Card.Title>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n</>;\\n\"","module.exports = \"<CardColumns>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title that wraps to a new line</Card.Title>\\n      <Card.Text>\\n        This is a longer card with supporting text below as a natural lead-in to\\n        additional content. This content is a little bit longer.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <Card className=\\\"p-3\\\">\\n    <blockquote className=\\\"blockquote mb-0 card-body\\\">\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\\n        erat a ante.\\n      </p>\\n      <footer className=\\\"blockquote-footer\\\">\\n        <small className=\\\"text-muted\\\">\\n          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\n        </small>\\n      </footer>\\n    </blockquote>\\n  </Card>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This card has supporting text below as a natural lead-in to additional\\n        content.{' '}\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n  <Card bg=\\\"primary\\\" text=\\\"white\\\" className=\\\"text-center p-3\\\">\\n    <blockquote className=\\\"blockquote mb-0 card-body\\\">\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\\n        erat a ante.\\n      </p>\\n      <footer className=\\\"blockquote-footer\\\">\\n        <small className=\\\"text-muted\\\">\\n          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\n        </small>\\n      </footer>\\n    </blockquote>\\n  </Card>\\n  <Card className=\\\"text-center\\\">\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This card has supporting text below as a natural lead-in to additional\\n        content.{' '}\\n      </Card.Text>\\n      <Card.Text>\\n        <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <Card>\\n    <Card.Img src=\\\"holder.js/100px160\\\" />\\n  </Card>\\n  <Card className=\\\"text-right\\\">\\n    <blockquote className=\\\"blockquote mb-0 card-body\\\">\\n      <p>\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\\n        erat a ante.\\n      </p>\\n      <footer className=\\\"blockquote-footer\\\">\\n        <small className=\\\"text-muted\\\">\\n          Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\n        </small>\\n      </footer>\\n    </blockquote>\\n  </Card>\\n  <Card>\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This is a wider card with supporting text below as a natural lead-in to\\n        additional content. This card has even longer content than the first to\\n        show that equal height action.\\n      </Card.Text>\\n      <Card.Text>\\n        <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n</CardColumns>;\\n\"","module.exports = \"<CardDeck>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This is a wider card with supporting text below as a natural lead-in to\\n        additional content. This content is a little bit longer.\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This card has supporting text below as a natural lead-in to additional\\n        content.{' '}\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This is a wider card with supporting text below as a natural lead-in to\\n        additional content. This card has even longer content than the first to\\n        show that equal height action.\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n</CardDeck>;\\n\"","module.exports = \"<CardGroup>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This is a wider card with supporting text below as a natural lead-in to\\n        additional content. This content is a little bit longer.\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This card has supporting text below as a natural lead-in to additional\\n        content.{' '}\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px160\\\" />\\n    <Card.Body>\\n      <Card.Title>Card title</Card.Title>\\n      <Card.Text>\\n        This is a wider card with supporting text below as a natural lead-in to\\n        additional content. This card has even longer content than the first to\\n        show that equal height action.\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Footer>\\n      <small className=\\\"text-muted\\\">Last updated 3 mins ago</small>\\n    </Card.Footer>\\n  </Card>\\n</CardGroup>;\\n\"","module.exports = \"<Card className=\\\"text-center\\\">\\n  <Card.Header>Featured</Card.Header>\\n  <Card.Body>\\n    <Card.Title>Special title treatment</Card.Title>\\n    <Card.Text>\\n      With supporting text below as a natural lead-in to additional content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n  <Card.Footer className=\\\"text-muted\\\">2 days ago</Card.Footer>\\n</Card>;\\n\"","module.exports = \"<>\\n  <Card>\\n    <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px180\\\" />\\n    <Card.Body>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n  </Card>\\n  <br />\\n  <Card>\\n    <Card.Body>\\n      <Card.Text>\\n        Some quick example text to build on the card title and make up the bulk\\n        of the card's content.\\n      </Card.Text>\\n    </Card.Body>\\n    <Card.Img variant=\\\"bottom\\\" src=\\\"holder.js/100px180\\\" />\\n  </Card>\\n</>;\\n\"","module.exports = \"<Card className=\\\"bg-dark text-white\\\">\\n  <Card.Img src=\\\"holder.js/100px270\\\" alt=\\\"Card image\\\" />\\n  <Card.ImgOverlay>\\n    <Card.Title>Card title</Card.Title>\\n    <Card.Text>\\n      This is a wider card with supporting text below as a natural lead-in to\\n      additional content. This content is a little bit longer.\\n    </Card.Text>\\n    <Card.Text>Last updated 3 mins ago</Card.Text>\\n  </Card.ImgOverlay>\\n</Card>;\\n\"","module.exports = \"<Card style={{ width: '18rem' }}>\\n  <Card.Img variant=\\\"top\\\" src=\\\"holder.js/100px180?text=Image cap\\\" />\\n  <Card.Body>\\n    <Card.Title>Card Title</Card.Title>\\n    <Card.Text>\\n      Some quick example text to build on the card title and make up the bulk of\\n      the card's content.\\n    </Card.Text>\\n  </Card.Body>\\n  <ListGroup className=\\\"list-group-flush\\\">\\n    <ListGroupItem>Cras justo odio</ListGroupItem>\\n    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\\n    <ListGroupItem>Vestibulum at eros</ListGroupItem>\\n  </ListGroup>\\n  <Card.Body>\\n    <Card.Link href=\\\"#\\\">Card Link</Card.Link>\\n    <Card.Link href=\\\"#\\\">Another Link</Card.Link>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card style={{ width: '18rem' }}>\\n  <ListGroup variant=\\\"flush\\\">\\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\\n  </ListGroup>\\n</Card>;\\n\"","module.exports = \"<Card style={{ width: '18rem' }}>\\n  <Card.Header>Featured</Card.Header>\\n  <ListGroup variant=\\\"flush\\\">\\n    <ListGroup.Item>Cras justo odio</ListGroup.Item>\\n    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\\n    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\\n  </ListGroup>\\n</Card>;\\n\"","module.exports = \"<Card>\\n  <Card.Header>\\n    <Nav variant=\\\"pills\\\" defaultActiveKey=\\\"#first\\\">\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#first\\\">Active</Nav.Link>\\n      </Nav.Item>\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#link\\\">Link</Nav.Link>\\n      </Nav.Item>\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#disabled\\\" disabled>\\n          Disabled\\n        </Nav.Link>\\n      </Nav.Item>\\n    </Nav>\\n  </Card.Header>\\n  <Card.Body>\\n    <Card.Title>Special title treatment</Card.Title>\\n    <Card.Text>\\n      With supporting text below as a natural lead-in to additional content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card>\\n  <Card.Header>\\n    <Nav variant=\\\"tabs\\\" defaultActiveKey=\\\"#first\\\">\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#first\\\">Active</Nav.Link>\\n      </Nav.Item>\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#link\\\">Link</Nav.Link>\\n      </Nav.Item>\\n      <Nav.Item>\\n        <Nav.Link href=\\\"#disabled\\\" disabled>\\n          Disabled\\n        </Nav.Link>\\n      </Nav.Item>\\n    </Nav>\\n  </Card.Header>\\n  <Card.Body>\\n    <Card.Title>Special title treatment</Card.Title>\\n    <Card.Text>\\n      With supporting text below as a natural lead-in to additional content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card style={{ width: '18rem' }}>\\n  <Card.Body>\\n    <Card.Title>Card Title</Card.Title>\\n    <Card.Subtitle className=\\\"mb-2 text-muted\\\">Card Subtitle</Card.Subtitle>\\n    <Card.Text>\\n      Some quick example text to build on the card title and make up the bulk of\\n      the card's content.\\n    </Card.Text>\\n    <Card.Link href=\\\"#\\\">Card Link</Card.Link>\\n    <Card.Link href=\\\"#\\\">Another Link</Card.Link>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card>\\n  <Card.Header>Featured</Card.Header>\\n  <Card.Body>\\n    <Card.Title>Special title treatment</Card.Title>\\n    <Card.Text>\\n      With supporting text below as a natural lead-in to additional content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card>\\n  <Card.Header>Quote</Card.Header>\\n  <Card.Body>\\n    <blockquote className=\\\"blockquote mb-0\\\">\\n      <p>\\n        {' '}\\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\\n        erat a ante.{' '}\\n      </p>\\n      <footer className=\\\"blockquote-footer\\\">\\n        Someone famous in <cite title=\\\"Source Title\\\">Source Title</cite>\\n      </footer>\\n    </blockquote>\\n  </Card.Body>\\n</Card>;\\n\"","module.exports = \"<Card>\\n  <Card.Header as=\\\"h5\\\">Featured</Card.Header>\\n  <Card.Body>\\n    <Card.Title>Special title treatment</Card.Title>\\n    <Card.Text>\\n      With supporting text below as a natural lead-in to additional content.\\n    </Card.Text>\\n    <Button variant=\\\"primary\\\">Go somewhere</Button>\\n  </Card.Body>\\n</Card>;\\n\""],"sourceRoot":""}