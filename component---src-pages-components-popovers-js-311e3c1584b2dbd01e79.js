webpackJsonp(["component---src-pages-components-popovers-js"],{"./node_modules/babel-loader/lib/index.js??ref--0-0!./src/pages/components/popovers.js":function(o,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(o){var e=o.data;return r.a.createElement("div",{className:"bs-docs-section"},r.a.createElement("h2",{className:"page-header"},r.a.createElement(a.a,{id:"popovers"},"Popovers")," ",r.a.createElement("small",null,"Popover")),r.a.createElement("p",null,"The Popover, offers a more robust alternative to the Tooltip for displaying overlays of content."),r.a.createElement(p.a,{codeText:c.a}),r.a.createElement("h4",null,r.a.createElement(a.a,{id:"popovers-overlay-trigger"},"With OverlayTrigger")),r.a.createElement("p",null,"The Popover component, like the Tooltip can be used with an"," ",r.a.createElement("code",null,"OverlayTrigger")," Component, and positioned around it."),r.a.createElement(p.a,{codeText:v.a}),r.a.createElement("h4",null,r.a.createElement(a.a,{id:"popovers-trigger-behaviors"},"Trigger behaviors")),r.a.createElement("p",null,"It's inadvisable to use ",r.a.createElement("code",null,'"hover"')," or ",r.a.createElement("code",null,'"focus"')," ","triggers for popovers, because they have poor accessibility from keyboard and on mobile devices."),r.a.createElement(p.a,{codeText:u.a}),r.a.createElement("h4",null,r.a.createElement(a.a,{id:"popovers-in-container"},"Popover component in container")),r.a.createElement("p",null,"Specify ",r.a.createElement("code",null,"container")," to control the DOM element to which to append the overlay. This element must be a positioned element to allow correctly positioning the overlay."),r.a.createElement(p.a,{codeText:h.a,exampleClassName:"bs-example-popover-contained"}),r.a.createElement("h4",null,r.a.createElement(a.a,{id:"popovers-positioned-scrolling"},"Positioned popover components in scrolling container")),r.a.createElement(p.a,{codeText:P.a,exampleClassName:"bs-example-popover-scroll"}),r.a.createElement("h3",null,r.a.createElement(a.a,{id:"popover-props"},"Props"),r.a.createElement(l.a,{component:e.Popover.displayName})),r.a.createElement(i.a,{metadata:e.Popover}))},n.d(e,"query",function(){return T});var t=n("./node_modules/react/index.js"),r=n.n(t),a=n("./src/components/Anchor.js"),l=n("./src/components/LinkToSource.js"),i=n("./src/components/PropTable.js"),p=n("./src/components/ReactPlayground.js"),s=n("./src/examples/PopoverBasic.js"),c=n.n(s),g=n("./src/examples/PopoverPositioned.js"),v=n.n(g),m=n("./src/examples/PopoverTriggerBehaviors.js"),u=n.n(m),d=n("./src/examples/PopoverContained.js"),h=n.n(d),y=n("./src/examples/PopoverPositionedScrolling.js"),P=n.n(y);var T="** extracted graphql fragment **"},"./src/examples/PopoverBasic.js":function(o,e){o.exports='<div style={{ height: 120 }}>\n  <Popover\n    id="popover-basic"\n    placement="right"\n    positionLeft={200}\n    positionTop={50}\n    title="Popover right"\n  >\n    And here\'s some <strong>amazing</strong> content. It\'s very engaging. right?\n  </Popover>\n</div>;\n'},"./src/examples/PopoverContained.js":function(o,e){o.exports='class Example extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClick = e => {\n      this.setState({ target: e.target, show: !this.state.show });\n    };\n\n    this.state = {\n      show: false\n    };\n  }\n\n  render() {\n    return (\n      <ButtonToolbar>\n        <Button onClick={this.handleClick}>Holy guacamole!</Button>\n\n        <Overlay\n          show={this.state.show}\n          target={this.state.target}\n          placement="bottom"\n          container={this}\n          containerPadding={20}\n        >\n          <Popover id="popover-contained" title="Popover bottom">\n            <strong>Holy guacamole!</strong> Check this info.\n          </Popover>\n        </Overlay>\n      </ButtonToolbar>\n    );\n  }\n}\n\nrender(<Example />);\n'},"./src/examples/PopoverPositioned.js":function(o,e){o.exports='const popoverLeft = (\n  <Popover id="popover-positioned-left" title="Popover left">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverTop = (\n  <Popover id="popover-positioned-top" title="Popover top">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverBottom = (\n  <Popover id="popover-positioned-bottom" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverRight = (\n  <Popover id="popover-positioned-right" title="Popover right">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nrender(\n  <ButtonToolbar>\n    <OverlayTrigger trigger="click" placement="left" overlay={popoverLeft}>\n      <Button>Holy guacamole!</Button>\n    </OverlayTrigger>\n    <OverlayTrigger trigger="click" placement="top" overlay={popoverTop}>\n      <Button>Holy guacamole!</Button>\n    </OverlayTrigger>\n    <OverlayTrigger trigger="click" placement="bottom" overlay={popoverBottom}>\n      <Button>Holy guacamole!</Button>\n    </OverlayTrigger>\n    <OverlayTrigger trigger="click" placement="right" overlay={popoverRight}>\n      <Button>Holy guacamole!</Button>\n    </OverlayTrigger>\n  </ButtonToolbar>\n);\n'},"./src/examples/PopoverPositionedScrolling.js":function(o,e){o.exports='const popoverLeft = (\n  <Popover id="popover-positioned-scrolling-left" title="Popover left">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverTop = (\n  <Popover id="popover-positioned-scrolling-top" title="Popover top">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverBottom = (\n  <Popover id="popover-positioned-scrolling-bottom" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverRight = (\n  <Popover id="popover-positioned-scrolling-right" title="Popover right">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nclass Positioner extends React.Component {\n  render() {\n    return (\n      <ButtonToolbar style={{ padding: \'100px 0\' }}>\n        <OverlayTrigger\n          container={this}\n          trigger="click"\n          placement="left"\n          overlay={popoverLeft}\n        >\n          <Button>Holy guacamole!</Button>\n        </OverlayTrigger>\n        <OverlayTrigger\n          container={this}\n          trigger="click"\n          placement="top"\n          overlay={popoverTop}\n        >\n          <Button>Holy guacamole!</Button>\n        </OverlayTrigger>\n        <OverlayTrigger\n          container={this}\n          trigger="click"\n          placement="bottom"\n          overlay={popoverBottom}\n        >\n          <Button>Holy guacamole!</Button>\n        </OverlayTrigger>\n        <OverlayTrigger\n          container={this}\n          trigger="click"\n          placement="right"\n          overlay={popoverRight}\n        >\n          <Button>Holy guacamole!</Button>\n        </OverlayTrigger>\n      </ButtonToolbar>\n    );\n  }\n}\n\nrender(<Positioner />);\n'},"./src/examples/PopoverTriggerBehaviors.js":function(o,e){o.exports='const popoverClick = (\n  <Popover id="popover-trigger-click" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverHoverFocus = (\n  <Popover id="popover-trigger-hover-focus" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverFocus = (\n  <Popover id="popover-trigger-focus" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nconst popoverClickRootClose = (\n  <Popover id="popover-trigger-click-root-close" title="Popover bottom">\n    <strong>Holy guacamole!</strong> Check this info.\n  </Popover>\n);\n\nrender(\n  <ButtonToolbar>\n    <OverlayTrigger trigger="click" placement="bottom" overlay={popoverClick}>\n      <Button>Click</Button>\n    </OverlayTrigger>\n    <OverlayTrigger\n      trigger={[\'hover\', \'focus\']}\n      placement="bottom"\n      overlay={popoverHoverFocus}\n    >\n      <Button>Hover + Focus</Button>\n    </OverlayTrigger>\n    <OverlayTrigger trigger="focus" placement="bottom" overlay={popoverFocus}>\n      <Button>Focus</Button>\n    </OverlayTrigger>\n    <OverlayTrigger\n      trigger="click"\n      rootClose\n      placement="bottom"\n      overlay={popoverClickRootClose}\n    >\n      <Button>Click w/rootClose</Button>\n    </OverlayTrigger>\n  </ButtonToolbar>\n);\n'}});
//# sourceMappingURL=component---src-pages-components-popovers-js-311e3c1584b2dbd01e79.js.map