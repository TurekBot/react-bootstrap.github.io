{"componentChunkName":"component---src-pages-components-tabs-js","path":"/components/tabs/","webpackCompilationHash":"00a8d3988c8aeee8dd90","result":{"data":{"Tabs":{"composes":null,"displayName":"Tabs","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"activeKey","doclets":[{"tag":"controllable","value":"onSelect"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Mark the Tab with a matching <code class=\"language-text\">eventKey</code> as active.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"variant","doclets":[{"tag":"type","value":"{('tabs'| 'pills')}"}],"defaultValue":{"value":"'tabs'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Navigation style</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'tabs'","computed":false},{"value":" 'pills'","computed":false}],"raw":null}},{"name":"transition","doclets":[{"tag":"type","value":"{Transition | false}"},{"tag":"default","value":"{Fade}"}],"defaultValue":{"value":"{Fade}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Sets a default animation strategy for all children <code class=\"language-text\">&lt;TabPane&gt;</code>s. Use\n<code class=\"language-text\">false</code> to disable, <code class=\"language-text\">true</code> to enable the default <code class=\"language-text\">&lt;Fade&gt;</code> animation or\na react-transition-group v2 <code class=\"language-text\">&lt;Transition/&gt;</code> component.</p>"}},"required":false,"type":{"name":"Transition | false","value":[{"name":"enum","value":[{"value":"false","computed":false}]},{"name":"elementType"}],"raw":null}},{"name":"id","doclets":[{"tag":"type","value":"{string}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>HTML id attribute, required if no <code class=\"language-text\">generateChildId</code> prop\nis specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":"requiredForA11y(PropTypes.string)"}},{"name":"onSelect","doclets":[{"tag":"controllable","value":"activeKey"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired when a Tab is selected.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">Any eventKey<span class=\"token punctuation\">,</span>\n  SyntheticEvent event<span class=\"token operator\">?</span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"mountOnEnter","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Wait until the first \"enter\" transition to mount tabs (add them to the DOM)</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"unmountOnExit","doclets":[],"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Unmount tabs (remove it from the DOM) when it is no longer visible</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"Tab":{"composes":null,"displayName":"Tab","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"title","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":true,"type":{"name":"node","value":null,"raw":null}}]},"TabContainer":{"composes":null,"displayName":"TabContainer","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"id","doclets":[{"tag":"type","value":"{string}"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>HTML id attribute, required if no <code class=\"language-text\">generateChildId</code> prop\nis specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":"function(props, ...args) {\n  let error = null;\n\n  if (!props.generateChildId) {\n    error = PropTypes.string(props, ...args);\n\n    if (!error && !props.id) {\n      error = new Error(\n        'In order to properly initialize Tabs in a way that is accessible ' +\n          'to assistive technologies (such as screen readers) an `id` or a ' +\n          '`generateChildId` prop to TabContainer is required',\n      );\n    }\n  }\n\n  return error;\n}"}},{"name":"transition","doclets":[{"tag":"type","value":"{{Transition | false}}"},{"tag":"default","value":"{Fade}"}],"defaultValue":{"value":"{Fade}","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Sets a default animation strategy for all children <code class=\"language-text\">&lt;TabPane&gt;</code>s. Use\n<code class=\"language-text\">false</code> to disable, <code class=\"language-text\">true</code> to enable the default <code class=\"language-text\">&lt;Fade&gt;</code> animation or\na react-transition-group v2 <code class=\"language-text\">&lt;Transition/&gt;</code> component.</p>"}},"required":false,"type":{"name":"{Transition | false}","value":[{"name":"enum","value":[{"value":"false","computed":false}]},{"name":"elementType"}],"raw":null}},{"name":"mountOnEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Wait until the first \"enter\" transition to mount tabs (add them to the DOM)</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"unmountOnExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Unmount tabs (remove it from the DOM) when they are no longer visible</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"generateChildId","doclets":[{"tag":"defaultValue","value":"(eventKey, type) => `${props.id}-${type}-${eventKey}`"}],"defaultValue":{"value":"(eventKey, type) => `${props.id}-${type}-${eventKey}`","computed":false},"description":{"childMarkdownRemark":{"html":"<p>A function that takes an <code class=\"language-text\">eventKey</code> and <code class=\"language-text\">type</code> and returns a unique id for\nchild tab <code class=\"language-text\">&lt;NavItem&gt;</code>s and <code class=\"language-text\">&lt;TabPane&gt;</code>s. The function <em>must</em> be a pure\nfunction, meaning it should always return the <em>same</em> id for the same set\nof inputs. The default value requires that an <code class=\"language-text\">id</code> to be set for the\n<code class=\"language-text\">&lt;TabContainer&gt;</code>.</p>\n<p>The <code class=\"language-text\">type</code> argument will either be <code class=\"language-text\">&quot;tab&quot;</code> or <code class=\"language-text\">&quot;pane&quot;</code>.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onSelect","doclets":[{"tag":"controllable","value":"activeKey"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when a tab is selected.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"activeKey","doclets":[{"tag":"controllable","value":"onSelect"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The <code class=\"language-text\">eventKey</code> of the currently active tab.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}}]},"TabContent":{"composes":null,"displayName":"TabContent","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'tab-content'"}],"defaultValue":{"value":"'tab-content'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}}]},"TabPane":{"composes":null,"displayName":"TabPane","description":{"childMarkdownRemark":{"html":""}},"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'tab-pane'"}],"defaultValue":{"value":"'tab-pane'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"elementType","value":null,"raw":null}},{"name":"eventKey","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A key that associates the <code class=\"language-text\">TabPane</code> with it's controlling <code class=\"language-text\">NavLink</code>.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"active","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Toggles the active state of the TabPane, this is generally controlled by a\nTabContainer.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"transition","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Use animation when showing or hiding <code class=\"language-text\">&lt;TabPane&gt;</code>s. Use <code class=\"language-text\">false</code> to disable,\n<code class=\"language-text\">true</code> to enable the default <code class=\"language-text\">&lt;Fade&gt;</code> animation or\na react-transition-group v2 <code class=\"language-text\">&lt;Transition/&gt;</code> component.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"bool"},{"name":"elementType"}],"raw":null}},{"name":"bsClass","doclets":[{"tag":"default","value":"'tab-pane'"}],"defaultValue":{"value":"'tab-pane'","computed":false},"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onEnter callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntering","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onEntering callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntered","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onEntered callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onExit callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExiting","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onExiting callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExited","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Transition onExited callback when animation is not <code class=\"language-text\">false</code></p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"mountOnEnter","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Wait until the first \"enter\" transition to mount the tab (add it to the DOM)</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"unmountOnExit","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Unmount the tab (remove it from the DOM) when it is no longer visible</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"id","doclets":[{"tag":"ignore","value":"*"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"aria-labelledby","doclets":[{"tag":"ignore","value":"*"}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":""}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}