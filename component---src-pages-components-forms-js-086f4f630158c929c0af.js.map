{"version":3,"sources":["webpack:///component---src-pages-components-forms-js-086f4f630158c929c0af.js","webpack:///./src/examples/FormBasic.js","webpack:///./src/examples/FormControls.js","webpack:///./src/examples/FormHorizontal.js","webpack:///./src/examples/FormInline.js","webpack:///./src/examples/FormInputAddons.js","webpack:///./src/examples/FormInputSizes.js","webpack:///./src/examples/FormValidation.js","webpack:///./src/pages/components/forms.js"],"names":["webpackJsonp","424","module","exports","425","426","427","428","429","430","523","__webpack_require__","_interopRequireDefault","obj","__esModule","default","FormControlsSection","_ref","data","_react2","createElement","className","_Anchor2","id","_ReactPlayground2","codeText","_FormBasic2","_LinkToSource2","component","FormGroup","displayName","_PropTable2","metadata","FormControl","ControlLabel","_FormControls2","Checkbox","Radio","FormControlStatic","HelpBlock","_FormInline2","_FormHorizontal2","Form","_FormInputAddons2","_FormInputSizes2","InputGroup","InputGroupAddon","InputGroupButton","_FormValidation2","FormControlFeedback","query","undefined","_react","_Anchor","_LinkToSource","_PropTable","_ReactPlayground","_FormBasic","_FormControls","_FormInline","_FormHorizontal","_FormInputSizes","_FormInputAddons","_FormValidation"],"mappings":"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","file":"component---src-pages-components-forms-js-086f4f630158c929c0af.js","sourcesContent":["webpackJsonp([163877828451256],{\n\n/***/ 424:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"class FormExample extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = {\\n      value: ''\\n    };\\n  }\\n\\n  getValidationState() {\\n    const length = this.state.value.length;\\n    if (length > 10) return 'success';\\n    else if (length > 5) return 'warning';\\n    else if (length > 0) return 'error';\\n    return null;\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <form>\\n        <FormGroup\\n          controlId=\\\"formBasicText\\\"\\n          validationState={this.getValidationState()}\\n        >\\n          <ControlLabel>Working example with validation</ControlLabel>\\n          <FormControl\\n            type=\\\"text\\\"\\n            value={this.state.value}\\n            placeholder=\\\"Enter text\\\"\\n            onChange={this.handleChange}\\n          />\\n          <FormControl.Feedback />\\n          <HelpBlock>Validation is based on string length.</HelpBlock>\\n        </FormGroup>\\n      </form>\\n    );\\n  }\\n}\\n\\nrender(<FormExample />);\\n\";\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"function FieldGroup({ id, label, help, ...props }) {\\n  return (\\n    <FormGroup controlId={id}>\\n      <ControlLabel>{label}</ControlLabel>\\n      <FormControl {...props} />\\n      {help && <HelpBlock>{help}</HelpBlock>}\\n    </FormGroup>\\n  );\\n}\\n\\nconst formInstance = (\\n  <form>\\n    <FieldGroup\\n      id=\\\"formControlsText\\\"\\n      type=\\\"text\\\"\\n      label=\\\"Text\\\"\\n      placeholder=\\\"Enter text\\\"\\n    />\\n    <FieldGroup\\n      id=\\\"formControlsEmail\\\"\\n      type=\\\"email\\\"\\n      label=\\\"Email address\\\"\\n      placeholder=\\\"Enter email\\\"\\n    />\\n    <FieldGroup id=\\\"formControlsPassword\\\" label=\\\"Password\\\" type=\\\"password\\\" />\\n    <FieldGroup\\n      id=\\\"formControlsFile\\\"\\n      type=\\\"file\\\"\\n      label=\\\"File\\\"\\n      help=\\\"Example block-level help text here.\\\"\\n    />\\n\\n    <Checkbox checked readOnly>\\n      Checkbox\\n    </Checkbox>\\n    <Radio checked readOnly>\\n      Radio\\n    </Radio>\\n\\n    <FormGroup>\\n      <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>{' '}\\n      <Checkbox inline>3</Checkbox>\\n    </FormGroup>\\n    <FormGroup>\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        1\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        2\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        3\\n      </Radio>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsSelect\\\">\\n      <ControlLabel>Select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" placeholder=\\\"select\\\">\\n        <option value=\\\"select\\\">select</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n    <FormGroup controlId=\\\"formControlsSelectMultiple\\\">\\n      <ControlLabel>Multiple select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" multiple>\\n        <option value=\\\"select\\\">select (multiple)</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsTextarea\\\">\\n      <ControlLabel>Textarea</ControlLabel>\\n      <FormControl componentClass=\\\"textarea\\\" placeholder=\\\"textarea\\\" />\\n    </FormGroup>\\n\\n    <FormGroup>\\n      <ControlLabel>Static text</ControlLabel>\\n      <FormControl.Static>email@example.com</FormControl.Static>\\n    </FormGroup>\\n\\n    <Button type=\\\"submit\\\">Submit</Button>\\n  </form>\\n);\\n\\nrender(formInstance);\\n\";\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<Form horizontal>\\n  <FormGroup controlId=\\\"formHorizontalEmail\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Email\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formHorizontalPassword\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Password\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Checkbox>Remember me</Checkbox>\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Button type=\\\"submit\\\">Sign in</Button>\\n    </Col>\\n  </FormGroup>\\n</Form>;\\n\";\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<Form inline>\\n  <FormGroup controlId=\\\"formInlineName\\\">\\n    <ControlLabel>Name</ControlLabel>{' '}\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Jane Doe\\\" />\\n  </FormGroup>{' '}\\n  <FormGroup controlId=\\\"formInlineEmail\\\">\\n    <ControlLabel>Email</ControlLabel>{' '}\\n    <FormControl type=\\\"email\\\" placeholder=\\\"jane.doe@example.com\\\" />\\n  </FormGroup>{' '}\\n  <Button type=\\\"submit\\\">Send invitation</Button>\\n</Form>;\\n\";\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<form>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>$</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>\\n        <Glyphicon glyph=\\\"music\\\" />\\n      </InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Button>\\n        <Button>Before</Button>\\n      </InputGroup.Button>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <DropdownButton\\n        componentClass={InputGroup.Button}\\n        id=\\\"input-dropdown-addon\\\"\\n        title=\\\"Action\\\"\\n      >\\n        <MenuItem key=\\\"1\\\">Item</MenuItem>\\n      </DropdownButton>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"radio\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"checkbox\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n</form>;\\n\";\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<form>\\n  <FormGroup bsSize=\\\"large\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n  </FormGroup>\\n  <FormGroup>\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n  </FormGroup>\\n  <FormGroup bsSize=\\\"small\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n  </FormGroup>\\n</form>;\\n\";\n\n/***/ }),\n\n/***/ 430:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<form>\\n  <FormGroup controlId=\\\"formValidationSuccess1\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <HelpBlock>Help text with validation state.</HelpBlock>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning1\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError1\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationNull\\\" validationState={null}>\\n    <ControlLabel>Input with no validation state</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess2\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning2\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError2\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess3\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and custom feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback>\\n      <Glyphicon glyph=\\\"music\\\" />\\n    </FormControl.Feedback>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning3\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input group with warning</ControlLabel>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <Form componentClass=\\\"fieldset\\\" horizontal>\\n    <FormGroup controlId=\\\"formValidationError3\\\" validationState=\\\"error\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input with error\\n      </Col>\\n      <Col xs={9}>\\n        <FormControl type=\\\"text\\\" />\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formValidationSuccess4\\\" validationState=\\\"success\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input group with success\\n      </Col>\\n      <Col xs={9}>\\n        <InputGroup>\\n          <InputGroup.Addon>@</InputGroup.Addon>\\n          <FormControl type=\\\"text\\\" />\\n        </InputGroup>\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n  </Form>\\n\\n  <Form componentClass=\\\"fieldset\\\" inline>\\n    <FormGroup controlId=\\\"formValidationWarning4\\\" validationState=\\\"warning\\\">\\n      <ControlLabel>Input with warning</ControlLabel>{' '}\\n      <FormControl type=\\\"text\\\" />\\n      <FormControl.Feedback />\\n    </FormGroup>{' '}\\n    <FormGroup controlId=\\\"formValidationError4\\\" validationState=\\\"error\\\">\\n      <ControlLabel>Input group with error</ControlLabel>{' '}\\n      <InputGroup>\\n        <InputGroup.Addon>@</InputGroup.Addon>\\n        <FormControl type=\\\"text\\\" />\\n      </InputGroup>\\n      <FormControl.Feedback />\\n    </FormGroup>\\n  </Form>\\n\\n  <Checkbox validationState=\\\"success\\\">Checkbox with success</Checkbox>\\n  <Radio validationState=\\\"warning\\\">Radio with warning</Radio>\\n  <Checkbox validationState=\\\"error\\\">Checkbox with error</Checkbox>\\n\\n  {/* This requires React 15's <span>-less spaces to be exactly correct. */}\\n  <FormGroup validationState=\\\"success\\\">\\n    <Checkbox inline>Checkbox</Checkbox> <Checkbox inline>with</Checkbox>{' '}\\n    <Checkbox inline>success</Checkbox>\\n  </FormGroup>\\n</form>;\\n\";\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\texports.default = FormControlsSection;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Anchor = __webpack_require__(12);\n\t\n\tvar _Anchor2 = _interopRequireDefault(_Anchor);\n\t\n\tvar _LinkToSource = __webpack_require__(17);\n\t\n\tvar _LinkToSource2 = _interopRequireDefault(_LinkToSource);\n\t\n\tvar _PropTable = __webpack_require__(14);\n\t\n\tvar _PropTable2 = _interopRequireDefault(_PropTable);\n\t\n\tvar _ReactPlayground = __webpack_require__(13);\n\t\n\tvar _ReactPlayground2 = _interopRequireDefault(_ReactPlayground);\n\t\n\tvar _FormBasic = __webpack_require__(424);\n\t\n\tvar _FormBasic2 = _interopRequireDefault(_FormBasic);\n\t\n\tvar _FormControls = __webpack_require__(425);\n\t\n\tvar _FormControls2 = _interopRequireDefault(_FormControls);\n\t\n\tvar _FormInline = __webpack_require__(427);\n\t\n\tvar _FormInline2 = _interopRequireDefault(_FormInline);\n\t\n\tvar _FormHorizontal = __webpack_require__(426);\n\t\n\tvar _FormHorizontal2 = _interopRequireDefault(_FormHorizontal);\n\t\n\tvar _FormInputSizes = __webpack_require__(429);\n\t\n\tvar _FormInputSizes2 = _interopRequireDefault(_FormInputSizes);\n\t\n\tvar _FormInputAddons = __webpack_require__(428);\n\t\n\tvar _FormInputAddons2 = _interopRequireDefault(_FormInputAddons);\n\t\n\tvar _FormValidation = __webpack_require__(430);\n\t\n\tvar _FormValidation2 = _interopRequireDefault(_FormValidation);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction FormControlsSection(_ref) {\n\t  var data = _ref.data;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'bs-docs-section' },\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms' },\n\t        'Forms'\n\t      ),\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'FormGroup, FormControl, ControlLabel'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'The ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl>'\n\t      ),\n\t      ' component renders a form control with Bootstrap styling. The ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormGroup>'\n\t      ),\n\t      ' component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'controlId'\n\t      ),\n\t      ' on ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormGroup>'\n\t      ),\n\t      ', and use',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<ControlLabel>'\n\t      ),\n\t      ' for the label.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormBasic2.default }),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'The ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl>'\n\t      ),\n\t      ' component directly renders the',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<input>'\n\t      ),\n\t      ' or other specified component. If you need to access the value of an uncontrolled ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl>'\n\t      ),\n\t      ', attach a ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'ref'\n\t      ),\n\t      ' to it as you would with an uncontrolled input, then call ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'ReactDOM.findDOMNode(ref)'\n\t      ),\n\t      ' to get the DOM node. You can then interact with that node as you would with any other uncontrolled input.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'If your application contains a large number of form groups, we recommend building a higher-level component encapsulating a complete field group that renders the label, the control, and any other necessary components. We don\\'t provide this out-of-the-box, because the composition of those field groups is too specific to an individual application to admit a good one-size-fits-all solution.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-form-group' },\n\t        'FormGroup'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.FormGroup.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.FormGroup }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-form-control' },\n\t        'FormControl'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.FormControl.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.FormControl }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-control-label' },\n\t        'ControlLabel'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.ControlLabel.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.ControlLabel }),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-controls' },\n\t        'Supported controls'\n\t      ),\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'Checkbox, Radio, FormControl.Static, HelpBlock'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Examples of standard form controls supported in an example form layout, using a custom ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FieldGroup>'\n\t      ),\n\t      ' component. Use',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl>'\n\t      ),\n\t      ' for ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<input>'\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<textarea>'\n\t      ),\n\t      ', and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<select>'\n\t      ),\n\t      '. Use',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Checkbox>'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Radio>'\n\t      ),\n\t      ' for checkboxes and radios respectively, optionally with ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'inline'\n\t      ),\n\t      ' to render multiple on the same line. Use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl.Static>'\n\t      ),\n\t      ' for static text.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormControls2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-controls-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-checkbox' },\n\t        'Checkbox'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.Checkbox.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.Checkbox }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-radio' },\n\t        'Radio'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.Radio.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.Radio }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-form-control-static' },\n\t        'FormControl.Static'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.FormControlStatic.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.FormControlStatic }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-help-block' },\n\t        'HelpBlock'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.HelpBlock.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.HelpBlock }),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-layout' },\n\t        'Form layout'\n\t      ),\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'Form'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-inline' },\n\t        'Inline forms'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Form inline>'\n\t      ),\n\t      ' instead of ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<form>'\n\t      ),\n\t      '. JSX strips whitespace between lines, so you will need to manually add spaces. Additionally, Bootstrap assigns inline form controls',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'width: auto'\n\t      ),\n\t      ' by default, so you may need to set custom widths.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormInline2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-horizontal' },\n\t        'Horizontal forms'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Form horizontal>'\n\t      ),\n\t      ' instead of',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<form>'\n\t      ),\n\t      ', then use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Col>'\n\t      ),\n\t      's to align labels and controls. Do not use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Row>'\n\t      ),\n\t      ' here, as',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormGroup>'\n\t      ),\n\t      ' will already serve as a grid row in a horizontal form.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormHorizontal2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-layout-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-form' },\n\t        'Form'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.Form.displayName }),\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        '(only needed for horizontal or inline forms)'\n\t      )\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.Form }),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-input-groups' },\n\t        'Input groups'\n\t      ),\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'InputGroup, InputGroup.Addon, InputGroup.Button'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-input-addons' },\n\t        'Input add-ons'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Wrap your form control in an ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<InputGroup>'\n\t      ),\n\t      ', then use for normal add-ons and for button add-ons. Exotic configurations may require CSS on your side.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormInputAddons2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-input-sizes' },\n\t        'Input sizes'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'bsSize'\n\t      ),\n\t      ' on ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormGroup>'\n\t      ),\n\t      ' or',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<InputGroup>'\n\t      ),\n\t      ' to change the size of inputs. It also works with add-ons and most other options.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormInputSizes2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-input-groups-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-input-group' },\n\t        'InputGroup'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.InputGroup.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.InputGroup }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-input-group-addon' },\n\t        'InputGroup.Addon'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.InputGroupAddon.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.InputGroupAddon }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-input-group-button' },\n\t        'InputGroup.Button'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.InputGroupButton.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.InputGroupButton }),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-validation' },\n\t        'Validation states'\n\t      ),\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'FormControl.Feedback'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Set ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'validationState'\n\t      ),\n\t      ' to one of ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '\\'success\\''\n\t      ),\n\t      ',',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '\\'warning\\''\n\t      ),\n\t      ' or ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '\\'error\\''\n\t      ),\n\t      ' to show validation state. Set ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'validationState'\n\t      ),\n\t      ' to ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'null'\n\t      ),\n\t      ' (or',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'undefined'\n\t      ),\n\t      ') to hide validation state. Add',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<FormControl.Feedback>'\n\t      ),\n\t      ' for a feedback icon when validation state is set.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _FormValidation2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-validation-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'forms-props-form-control-feedback' },\n\t        'FormControl.Feedback'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.FormControlFeedback.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.FormControlFeedback })\n\t  );\n\t}\n\t\n\tvar query = exports.query = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-forms-js-086f4f630158c929c0af.js","module.exports = \"class FormExample extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = {\\n      value: ''\\n    };\\n  }\\n\\n  getValidationState() {\\n    const length = this.state.value.length;\\n    if (length > 10) return 'success';\\n    else if (length > 5) return 'warning';\\n    else if (length > 0) return 'error';\\n    return null;\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <form>\\n        <FormGroup\\n          controlId=\\\"formBasicText\\\"\\n          validationState={this.getValidationState()}\\n        >\\n          <ControlLabel>Working example with validation</ControlLabel>\\n          <FormControl\\n            type=\\\"text\\\"\\n            value={this.state.value}\\n            placeholder=\\\"Enter text\\\"\\n            onChange={this.handleChange}\\n          />\\n          <FormControl.Feedback />\\n          <HelpBlock>Validation is based on string length.</HelpBlock>\\n        </FormGroup>\\n      </form>\\n    );\\n  }\\n}\\n\\nrender(<FormExample />);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormBasic.js","module.exports = \"function FieldGroup({ id, label, help, ...props }) {\\n  return (\\n    <FormGroup controlId={id}>\\n      <ControlLabel>{label}</ControlLabel>\\n      <FormControl {...props} />\\n      {help && <HelpBlock>{help}</HelpBlock>}\\n    </FormGroup>\\n  );\\n}\\n\\nconst formInstance = (\\n  <form>\\n    <FieldGroup\\n      id=\\\"formControlsText\\\"\\n      type=\\\"text\\\"\\n      label=\\\"Text\\\"\\n      placeholder=\\\"Enter text\\\"\\n    />\\n    <FieldGroup\\n      id=\\\"formControlsEmail\\\"\\n      type=\\\"email\\\"\\n      label=\\\"Email address\\\"\\n      placeholder=\\\"Enter email\\\"\\n    />\\n    <FieldGroup id=\\\"formControlsPassword\\\" label=\\\"Password\\\" type=\\\"password\\\" />\\n    <FieldGroup\\n      id=\\\"formControlsFile\\\"\\n      type=\\\"file\\\"\\n      label=\\\"File\\\"\\n      help=\\\"Example block-level help text here.\\\"\\n    />\\n\\n    <Checkbox checked readOnly>\\n      Checkbox\\n    </Checkbox>\\n    <Radio checked readOnly>\\n      Radio\\n    </Radio>\\n\\n    <FormGroup>\\n      <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>{' '}\\n      <Checkbox inline>3</Checkbox>\\n    </FormGroup>\\n    <FormGroup>\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        1\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        2\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        3\\n      </Radio>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsSelect\\\">\\n      <ControlLabel>Select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" placeholder=\\\"select\\\">\\n        <option value=\\\"select\\\">select</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n    <FormGroup controlId=\\\"formControlsSelectMultiple\\\">\\n      <ControlLabel>Multiple select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" multiple>\\n        <option value=\\\"select\\\">select (multiple)</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsTextarea\\\">\\n      <ControlLabel>Textarea</ControlLabel>\\n      <FormControl componentClass=\\\"textarea\\\" placeholder=\\\"textarea\\\" />\\n    </FormGroup>\\n\\n    <FormGroup>\\n      <ControlLabel>Static text</ControlLabel>\\n      <FormControl.Static>email@example.com</FormControl.Static>\\n    </FormGroup>\\n\\n    <Button type=\\\"submit\\\">Submit</Button>\\n  </form>\\n);\\n\\nrender(formInstance);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormControls.js","module.exports = \"<Form horizontal>\\n  <FormGroup controlId=\\\"formHorizontalEmail\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Email\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formHorizontalPassword\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Password\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Checkbox>Remember me</Checkbox>\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Button type=\\\"submit\\\">Sign in</Button>\\n    </Col>\\n  </FormGroup>\\n</Form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormHorizontal.js","module.exports = \"<Form inline>\\n  <FormGroup controlId=\\\"formInlineName\\\">\\n    <ControlLabel>Name</ControlLabel>{' '}\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Jane Doe\\\" />\\n  </FormGroup>{' '}\\n  <FormGroup controlId=\\\"formInlineEmail\\\">\\n    <ControlLabel>Email</ControlLabel>{' '}\\n    <FormControl type=\\\"email\\\" placeholder=\\\"jane.doe@example.com\\\" />\\n  </FormGroup>{' '}\\n  <Button type=\\\"submit\\\">Send invitation</Button>\\n</Form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInline.js","module.exports = \"<form>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>$</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>\\n        <Glyphicon glyph=\\\"music\\\" />\\n      </InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Button>\\n        <Button>Before</Button>\\n      </InputGroup.Button>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <DropdownButton\\n        componentClass={InputGroup.Button}\\n        id=\\\"input-dropdown-addon\\\"\\n        title=\\\"Action\\\"\\n      >\\n        <MenuItem key=\\\"1\\\">Item</MenuItem>\\n      </DropdownButton>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"radio\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"checkbox\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInputAddons.js","module.exports = \"<form>\\n  <FormGroup bsSize=\\\"large\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n  </FormGroup>\\n  <FormGroup>\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n  </FormGroup>\\n  <FormGroup bsSize=\\\"small\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInputSizes.js","module.exports = \"<form>\\n  <FormGroup controlId=\\\"formValidationSuccess1\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <HelpBlock>Help text with validation state.</HelpBlock>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning1\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError1\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationNull\\\" validationState={null}>\\n    <ControlLabel>Input with no validation state</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess2\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning2\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError2\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess3\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and custom feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback>\\n      <Glyphicon glyph=\\\"music\\\" />\\n    </FormControl.Feedback>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning3\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input group with warning</ControlLabel>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <Form componentClass=\\\"fieldset\\\" horizontal>\\n    <FormGroup controlId=\\\"formValidationError3\\\" validationState=\\\"error\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input with error\\n      </Col>\\n      <Col xs={9}>\\n        <FormControl type=\\\"text\\\" />\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formValidationSuccess4\\\" validationState=\\\"success\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input group with success\\n      </Col>\\n      <Col xs={9}>\\n        <InputGroup>\\n          <InputGroup.Addon>@</InputGroup.Addon>\\n          <FormControl type=\\\"text\\\" />\\n        </InputGroup>\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n  </Form>\\n\\n  <Form componentClass=\\\"fieldset\\\" inline>\\n    <FormGroup controlId=\\\"formValidationWarning4\\\" validationState=\\\"warning\\\">\\n      <ControlLabel>Input with warning</ControlLabel>{' '}\\n      <FormControl type=\\\"text\\\" />\\n      <FormControl.Feedback />\\n    </FormGroup>{' '}\\n    <FormGroup controlId=\\\"formValidationError4\\\" validationState=\\\"error\\\">\\n      <ControlLabel>Input group with error</ControlLabel>{' '}\\n      <InputGroup>\\n        <InputGroup.Addon>@</InputGroup.Addon>\\n        <FormControl type=\\\"text\\\" />\\n      </InputGroup>\\n      <FormControl.Feedback />\\n    </FormGroup>\\n  </Form>\\n\\n  <Checkbox validationState=\\\"success\\\">Checkbox with success</Checkbox>\\n  <Radio validationState=\\\"warning\\\">Radio with warning</Radio>\\n  <Checkbox validationState=\\\"error\\\">Checkbox with error</Checkbox>\\n\\n  {/* This requires React 15's <span>-less spaces to be exactly correct. */}\\n  <FormGroup validationState=\\\"success\\\">\\n    <Checkbox inline>Checkbox</Checkbox> <Checkbox inline>with</Checkbox>{' '}\\n    <Checkbox inline>success</Checkbox>\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormValidation.js","import React from 'react';\n\nimport Anchor from '../../components/Anchor';\nimport LinkToSource from '../../components/LinkToSource';\nimport PropTable from '../../components/PropTable';\nimport ReactPlayground from '../../components/ReactPlayground';\n\nimport FormBasic from '../../examples/FormBasic';\nimport FormControls from '../../examples/FormControls';\nimport FormInline from '../../examples/FormInline';\nimport FormHorizontal from '../../examples/FormHorizontal';\nimport FormInputSizes from '../../examples/FormInputSizes';\nimport FormInputAddons from '../../examples/FormInputAddons';\nimport FormValidation from '../../examples/FormValidation';\n\nexport default function FormControlsSection({ data }) {\n  return (\n    <div className=\"bs-docs-section\">\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms\">Forms</Anchor>{' '}\n        <small>FormGroup, FormControl, ControlLabel</small>\n      </h2>\n\n      <p>\n        The <code>{'<FormControl>'}</code> component renders a form control with\n        Bootstrap styling. The <code>{'<FormGroup>'}</code> component wraps a\n        form control with proper spacing, along with support for a label, help\n        text, and validation state. To ensure accessibility, set{' '}\n        <code>controlId</code> on <code>{'<FormGroup>'}</code>, and use{' '}\n        <code>{'<ControlLabel>'}</code> for the label.\n      </p>\n\n      <ReactPlayground codeText={FormBasic} />\n\n      <p>\n        The <code>{'<FormControl>'}</code> component directly renders the{' '}\n        <code>{'<input>'}</code> or other specified component. If you need to\n        access the value of an uncontrolled <code>{'<FormControl>'}</code>,\n        attach a <code>ref</code> to it as you would with an uncontrolled input,\n        then call <code>ReactDOM.findDOMNode(ref)</code> to get the DOM node.\n        You can then interact with that node as you would with any other\n        uncontrolled input.\n      </p>\n      <p>\n        If your application contains a large number of form groups, we recommend\n        building a higher-level component encapsulating a complete field group\n        that renders the label, the control, and any other necessary components.\n        We don't provide this out-of-the-box, because the composition of those\n        field groups is too specific to an individual application to admit a\n        good one-size-fits-all solution.\n      </p>\n\n      <h3>\n        <Anchor id=\"forms-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form-group\">FormGroup</Anchor>\n        <LinkToSource component={data.FormGroup.displayName} />\n      </h4>\n      <PropTable metadata={data.FormGroup} />\n\n      <h4>\n        <Anchor id=\"forms-props-form-control\">FormControl</Anchor>\n        <LinkToSource component={data.FormControl.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControl} />\n\n      <h4>\n        <Anchor id=\"forms-props-control-label\">ControlLabel</Anchor>\n        <LinkToSource component={data.ControlLabel.displayName} />\n      </h4>\n      <PropTable metadata={data.ControlLabel} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-controls\">Supported controls</Anchor>{' '}\n        <small>Checkbox, Radio, FormControl.Static, HelpBlock</small>\n      </h2>\n\n      <p>\n        Examples of standard form controls supported in an example form layout,\n        using a custom <code>{'<FieldGroup>'}</code> component. Use{' '}\n        <code>{'<FormControl>'}</code> for <code>{'<input>'}</code>,{' '}\n        <code>{'<textarea>'}</code>, and <code>{'<select>'}</code>. Use{' '}\n        <code>{'<Checkbox>'}</code> and <code>{'<Radio>'}</code> for checkboxes\n        and radios respectively, optionally with <code>inline</code> to render\n        multiple on the same line. Use <code>{'<FormControl.Static>'}</code> for\n        static text.\n      </p>\n      <ReactPlayground codeText={FormControls} />\n\n      <h3>\n        <Anchor id=\"forms-controls-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-checkbox\">Checkbox</Anchor>\n        <LinkToSource component={data.Checkbox.displayName} />\n      </h4>\n      <PropTable metadata={data.Checkbox} />\n\n      <h4>\n        <Anchor id=\"forms-props-radio\">Radio</Anchor>\n        <LinkToSource component={data.Radio.displayName} />\n      </h4>\n      <PropTable metadata={data.Radio} />\n\n      <h4>\n        <Anchor id=\"forms-props-form-control-static\">FormControl.Static</Anchor>\n        <LinkToSource component={data.FormControlStatic.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControlStatic} />\n\n      <h4>\n        <Anchor id=\"forms-props-help-block\">HelpBlock</Anchor>\n        <LinkToSource component={data.HelpBlock.displayName} />\n      </h4>\n      <PropTable metadata={data.HelpBlock} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-layout\">Form layout</Anchor> <small>Form</small>\n      </h2>\n\n      <h3>\n        <Anchor id=\"forms-inline\">Inline forms</Anchor>\n      </h3>\n      <p>\n        Use <code>{'<Form inline>'}</code> instead of <code>{'<form>'}</code>.\n        JSX strips whitespace between lines, so you will need to manually add\n        spaces. Additionally, Bootstrap assigns inline form controls{' '}\n        <code>width: auto</code> by default, so you may need to set custom\n        widths.\n      </p>\n      <ReactPlayground codeText={FormInline} />\n\n      <h3>\n        <Anchor id=\"forms-horizontal\">Horizontal forms</Anchor>\n      </h3>\n      <p>\n        Use <code>{'<Form horizontal>'}</code> instead of{' '}\n        <code>{'<form>'}</code>, then use <code>{'<Col>'}</code>s to align\n        labels and controls. Do not use <code>{'<Row>'}</code> here, as{' '}\n        <code>{'<FormGroup>'}</code> will already serve as a grid row in a\n        horizontal form.\n      </p>\n      <ReactPlayground codeText={FormHorizontal} />\n\n      <h3>\n        <Anchor id=\"forms-layout-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form\">Form</Anchor>\n        <LinkToSource component={data.Form.displayName} />\n        <small>(only needed for horizontal or inline forms)</small>\n      </h4>\n      <PropTable metadata={data.Form} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-input-groups\">Input groups</Anchor>\n        <small>InputGroup, InputGroup.Addon, InputGroup.Button</small>\n      </h2>\n\n      <h3>\n        <Anchor id=\"forms-input-addons\">Input add-ons</Anchor>\n      </h3>\n      <p>\n        Wrap your form control in an <code>{'<InputGroup>'}</code>, then use for\n        normal add-ons and for button add-ons. Exotic configurations may require\n        CSS on your side.\n      </p>\n      <ReactPlayground codeText={FormInputAddons} />\n\n      <h3>\n        <Anchor id=\"forms-input-sizes\">Input sizes</Anchor>\n      </h3>\n      <p>\n        Use <code>bsSize</code> on <code>{'<FormGroup>'}</code> or{' '}\n        <code>{'<InputGroup>'}</code> to change the size of inputs. It also\n        works with add-ons and most other options.\n      </p>\n      <ReactPlayground codeText={FormInputSizes} />\n\n      <h3>\n        <Anchor id=\"forms-input-groups-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-input-group\">InputGroup</Anchor>\n        <LinkToSource component={data.InputGroup.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroup} />\n\n      <h4>\n        <Anchor id=\"forms-props-input-group-addon\">InputGroup.Addon</Anchor>\n        <LinkToSource component={data.InputGroupAddon.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroupAddon} />\n\n      <h4>\n        <Anchor id=\"forms-props-input-group-button\">InputGroup.Button</Anchor>\n        <LinkToSource component={data.InputGroupButton.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroupButton} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-validation\">Validation states</Anchor>\n        <small>FormControl.Feedback</small>\n      </h2>\n\n      <p>\n        Set <code>validationState</code> to one of <code>'success'</code>,{' '}\n        <code>'warning'</code> or <code>'error'</code> to show validation state.\n        Set <code>validationState</code> to <code>null</code> (or{' '}\n        <code>undefined</code>) to hide validation state. Add{' '}\n        <code>{'<FormControl.Feedback>'}</code> for a feedback icon when\n        validation state is set.\n      </p>\n      <ReactPlayground codeText={FormValidation} />\n\n      <h3>\n        <Anchor id=\"forms-validation-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form-control-feedback\">\n          FormControl.Feedback\n        </Anchor>\n        <LinkToSource component={data.FormControlFeedback.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControlFeedback} />\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query FormQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...PropTable_metadata\n    }\n    FormGroup: componentMetadata(displayName: { eq: \"FormGroup\" }) {\n      ...PropTable_metadata\n    }\n    FormControl: componentMetadata(displayName: { eq: \"FormControl\" }) {\n      ...PropTable_metadata\n    }\n    ControlLabel: componentMetadata(displayName: { eq: \"ControlLabel\" }) {\n      ...PropTable_metadata\n    }\n    Checkbox: componentMetadata(displayName: { eq: \"Checkbox\" }) {\n      ...PropTable_metadata\n    }\n    Radio: componentMetadata(displayName: { eq: \"Radio\" }) {\n      ...PropTable_metadata\n    }\n    FormControlStatic: componentMetadata(\n      displayName: { eq: \"FormControlStatic\" }\n    ) {\n      ...PropTable_metadata\n    }\n    HelpBlock: componentMetadata(displayName: { eq: \"HelpBlock\" }) {\n      ...PropTable_metadata\n    }\n    InputGroup: componentMetadata(displayName: { eq: \"InputGroup\" }) {\n      ...PropTable_metadata\n    }\n    InputGroupAddon: componentMetadata(displayName: { eq: \"InputGroupAddon\" }) {\n      ...PropTable_metadata\n    }\n    InputGroupButton: componentMetadata(\n      displayName: { eq: \"InputGroupButton\" }\n    ) {\n      ...PropTable_metadata\n    }\n    FormControlFeedback: componentMetadata(\n      displayName: { eq: \"FormControlFeedback\" }\n    ) {\n      ...PropTable_metadata\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/forms.js"],"sourceRoot":""}