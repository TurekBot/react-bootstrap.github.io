{"version":3,"sources":["webpack:///component---src-pages-components-panel-js-a50913a3244cb3fa0713.js","webpack:///./src/examples/PanelBasic.js","webpack:///./src/examples/PanelCollapsible.js","webpack:///./src/examples/PanelContextual.js","webpack:///./src/examples/PanelGroupAccordion.js","webpack:///./src/examples/PanelGroupControlled.js","webpack:///./src/examples/PanelGroupUncontrolled.js","webpack:///./src/examples/PanelListGroupFill.js","webpack:///./src/examples/PanelWithFooter.js","webpack:///./src/examples/PanelWithHeading.js","webpack:///./src/pages/components/panel.js"],"names":["webpackJsonp","463","module","exports","464","465","466","467","468","469","470","471","526","__webpack_require__","_interopRequireDefault","obj","__esModule","default","PanelSection","_ref","data","_react2","createElement","className","_Anchor2","id","_ReactPlayground2","codeText","_PanelBasic2","_PanelWithHeading2","_PanelWithFooter2","_PanelContextual2","_PanelListGroupFill2","_PanelCollapsible2","_PanelGroupControlled2","_PanelGroupUncontrolled2","_PanelGroupAccordion2","_LinkToSource2","component","Panel","displayName","_PropTable2","metadata","PanelHeading","PanelTitle","PanelToggle","PanelCollapse","PanelBody","PanelFooter","PanelGroup","query","undefined","_react","_Anchor","_LinkToSource","_PropTable","_ReactPlayground","_PanelBasic","_PanelCollapsible","_PanelWithHeading","_PanelWithFooter","_PanelContextual","_PanelListGroupFill","_PanelGroupControlled","_PanelGroupUncontrolled","_PanelGroupAccordion"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GAEvB,YCLDD,GAAOC,QAAU,6NDWXC,IACA,SAAUF,EAAQC,GAEvB,YEdDD,GAAOC,QAAU,quEFoBXE,IACA,SAAUH,EAAQC,GAEvB,YGvBDD,GAAOC,QAAU,4+BH6BXG,IACA,SAAUJ,EAAQC,GAEvB,YIhCDD,GAAOC,QAAU,6lFJsCXI,IACA,SAAUL,EAAQC,GAEvB,YKzCDD,GAAOC,QAAU,ghCL+CXK,IACA,SAAUN,EAAQC,GAEvB,YMlDDD,GAAOC,QAAU,yeNwDXM,IACA,SAAUP,EAAQC,GAEvB,YO3DDD,GAAOC,QAAU,iWPiEXO,IACA,SAAUR,EAAQC,GAEvB,YQpEDD,GAAOC,QAAU,+GR0EXQ,IACA,SAAUT,EAAQC,GAEvB,YS7EDD,GAAOC,QAAU,wVTmFXS,IACA,SAAUV,EAAQC,EAASU,GAEhC,YA8DA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GUnIzE,QAASG,GAATC,GAAgC,GAARC,GAAQD,EAARC,IACrC,OACEC,GAAAJ,QAAAK,cAAA,OAAKC,UAAU,mBACbF,EAAAJ,QAAAK,cAAA,MAAIC,UAAU,eACZF,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,UAAX,UAAoC,IACpCJ,EAAAJ,QAAAK,cAAA,8CAGFD,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,gBAAX,kBAEFJ,EAAAJ,QAAAK,cAAA,gCACsBD,EAAAJ,QAAAK,cAAA,yBADtB,sEAIAD,EAAAJ,QAAAK,cAAA,6EACoE,IAClED,EAAAJ,QAAAK,cAAA,uBAFF,oFAGgCD,EAAAJ,QAAAK,cAAA,mBAHhC,aAKAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAC,EAAAX,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,kBAAX,uBAEFJ,EAAAJ,QAAAK,cAAA,iEACwD,IACtDD,EAAAJ,QAAAK,cAAA,YAAO,mBAFT,QAEuCD,EAAAJ,QAAAK,cAAA,YAAO,iBAAwB,IAFtE,mBAKAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAE,EAAAZ,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,iBAAX,sBAEFJ,EAAAJ,QAAAK,cAAA,kDACwCD,EAAAJ,QAAAK,cAAA,YAAO,kBAAyB,IADxE,4JAMAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAG,EAAAb,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,qBAAX,4BAEFJ,EAAAJ,QAAAK,cAAA,2GAEiCD,EAAAJ,QAAAK,cAAA,uBAFjC,UAIAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAI,EAAAd,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,iBAAX,gCAEFJ,EAAAJ,QAAAK,cAAA,oBACUD,EAAAJ,QAAAK,cAAA,yBADV,KACwCD,EAAAJ,QAAAK,cAAA,6BAAiC,IADzE,4DAE4D,IAC1DD,EAAAJ,QAAAK,cAAA,YAAO,cAHT,eAKAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAK,EAAAf,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,sBAAX,sBAEFJ,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAM,EAAAhB,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,qBAAX,2BAEFJ,EAAAJ,QAAAK,cAAA,SACED,EAAAJ,QAAAK,cAAA,0BADF,iDACwE,IACtED,EAAAJ,QAAAK,cAAA,yBAFF,uCAIAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAO,EAAAjB,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,uBAAX,6BAEFJ,EAAAJ,QAAAK,cAAA,SACED,EAAAJ,QAAAK,cAAA,0BADF,qEAEuBD,EAAAJ,QAAAK,cAAA,gCAFvB,sDAKAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAQ,EAAAlB,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,oBAAX,eAEFJ,EAAAJ,QAAAK,cAAA,gBACMD,EAAAJ,QAAAK,cAAA,wCADN,uDAIAD,EAAAJ,QAAAK,cAAAI,EAAAT,SAAiBU,SAAAS,EAAAnB,UAEjBI,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,gBAAX,UAGFJ,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,0BAAX,qBACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAKmB,MAAMC,eAEtCnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAKmB,QAE1BlB,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,8BAAX,iBACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAKuB,aAAaH,eAE7CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAKuB,eAE1BtB,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,4BAAX,eACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAKwB,WAAWJ,eAE3CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAKwB,aAE1BvB,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,6BAAX,gBACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAKyB,YAAYL,eAE5CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAKyB,cAE1BxB,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,+BAAX,kBACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAK0B,cAAcN,eAE9CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAK0B,gBAE1BzB,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,2BAAX,cACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAK2B,UAAUP,eAE1CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAK2B,YAE1B1B,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,6BAAX,gBACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAK4B,YAAYR,eAE5CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAK4B,cAE1B3B,EAAAJ,QAAAK,cAAA,UACED,EAAAJ,QAAAK,cAAAE,EAAAP,SAAQQ,GAAG,sBAAX,cACAJ,EAAAJ,QAAAK,cAAAe,EAAApB,SAAcqB,UAAWlB,EAAK6B,WAAWT,eAE3CnB,EAAAJ,QAAAK,cAAAmB,EAAAxB,SAAWyB,SAAUtB,EAAK6B,cV1E/B9C,EAAQa,YAAa,EACrBb,EAAQ+C,MAAQC,OAChBhD,EAAQc,QUzEeC,CAjBxB,IAAAkC,GAAAvC,EAAA,GV8FKQ,EAAUP,EAAuBsC,GU5FtCC,EAAAxC,EAAA,IVgGKW,EAAWV,EAAuBuC,GU/FvCC,EAAAzC,EAAA,IVmGKwB,EAAiBvB,EAAuBwC,GUlG7CC,EAAA1C,EAAA,IVsGK4B,EAAc3B,EAAuByC,GUrG1CC,EAAA3C,EAAA,IVyGKa,EAAoBZ,EAAuB0C,GUvGhDC,EAAA5C,EAAA,KV2GKe,EAAed,EAAuB2C,GU1G3CC,EAAA7C,EAAA,KV8GKoB,EAAqBnB,EAAuB4C,GU7GjDC,EAAA9C,EAAA,KViHKgB,EAAqBf,EAAuB6C,GUhHjDC,EAAA/C,EAAA,KVoHKiB,EAAoBhB,EAAuB8C,GUnHhDC,EAAAhD,EAAA,KVuHKkB,EAAoBjB,EAAuB+C,GUtHhDC,EAAAjD,EAAA,KV0HKmB,EAAuBlB,EAAuBgD,GUzHnDC,EAAAlD,EAAA,KV6HKqB,EAAyBpB,EAAuBiD,GU5HrDC,EAAAnD,EAAA,KVgIKsB,EAA2BrB,EAAuBkD,GU/HvDC,EAAApD,EAAA,KVmIKuB,EAAwBtB,EAAuBmD,EUqBvCf","file":"component---src-pages-components-panel-js-a50913a3244cb3fa0713.js","sourcesContent":["webpackJsonp([244145424894345],{\n\n/***/ 463:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"function handleClick() {\\n  alert('You have clicked on me');\\n}\\n\\nconst panelInstance = (\\n  <Panel onClick={handleClick}>\\n    <Panel.Body>Basic panel example</Panel.Body>\\n  </Panel>\\n);\\n\\nrender(panelInstance);\\n\";\n\n/***/ }),\n\n/***/ 464:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"class Example extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      open: true\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={() => this.setState({ open: !this.state.open })}>\\n          Click to toggle\\n        </Button>\\n        <br />\\n        <Panel id=\\\"collapsible-panel-example-1\\\" expanded={this.state.open}>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n\\n        <p>You can also make the Panel heading toggle the collapse.</p>\\n\\n        <Panel id=\\\"collapsible-panel-example-2\\\" defaultExpanded>\\n          <Panel.Heading>\\n            <Panel.Title toggle>\\n              Title that functions as a collapse toggle\\n            </Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n\\n        <p>Or use a Panel.Toggle component to customize</p>\\n\\n        <Panel id=\\\"collapsible-panel-example-3\\\" defaultExpanded>\\n          <Panel.Heading>\\n            <Panel.Title>Title that functions as a collapse toggle</Panel.Title>\\n            <Panel.Toggle componentClass=\\\"a\\\">My own toggle</Panel.Toggle>\\n          </Panel.Heading>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\";\n\n/***/ }),\n\n/***/ 465:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<div>\\n  <Panel bsStyle=\\\"primary\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"success\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"info\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"warning\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"danger\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n</div>;\\n\";\n\n/***/ }),\n\n/***/ 466:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<PanelGroup accordion id=\\\"accordion-example\\\">\\n  <Panel eventKey=\\\"1\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #1</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"2\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #2</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"3\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #3</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n</PanelGroup>;\\n\";\n\n/***/ }),\n\n/***/ 467:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"class ControlledPanelGroup extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleSelect = this.handleSelect.bind(this);\\n\\n    this.state = {\\n      activeKey: '1'\\n    };\\n  }\\n\\n  handleSelect(activeKey) {\\n    this.setState({ activeKey });\\n  }\\n\\n  render() {\\n    return (\\n      <PanelGroup\\n        accordion\\n        id=\\\"accordion-controlled-example\\\"\\n        activeKey={this.state.activeKey}\\n        onSelect={this.handleSelect}\\n      >\\n        <Panel eventKey=\\\"1\\\">\\n          <Panel.Heading>\\n            <Panel.Title toggle>Panel heading 1</Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Body collapsible>Panel content 1</Panel.Body>\\n        </Panel>\\n        <Panel eventKey=\\\"2\\\">\\n          <Panel.Heading>\\n            <Panel.Title toggle>Panel heading 2</Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Body collapsible>Panel content 2</Panel.Body>\\n        </Panel>\\n      </PanelGroup>\\n    );\\n  }\\n}\\n\\nrender(<ControlledPanelGroup />);\\n\";\n\n/***/ }),\n\n/***/ 468:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<PanelGroup accordion id=\\\"accordion-uncontrolled-example\\\" defaultActiveKey=\\\"2\\\">\\n  <Panel eventKey=\\\"1\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Panel heading 1</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>Panel content 1</Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"2\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Panel heading 2</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>Panel content 2</Panel.Body>\\n  </Panel>\\n</PanelGroup>;\\n\";\n\n/***/ }),\n\n/***/ 469:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<Panel>\\n  <Panel.Heading>Panel heading</Panel.Heading>\\n  <Panel.Body>Some default panel content here.</Panel.Body>\\n  <ListGroup>\\n    <ListGroupItem>Item 1</ListGroupItem>\\n    <ListGroupItem>Item 2</ListGroupItem>\\n    <ListGroupItem>&hellip;</ListGroupItem>\\n  </ListGroup>\\n  <Panel.Body>Some more panel content here.</Panel.Body>\\n</Panel>;\\n\";\n\n/***/ }),\n\n/***/ 470:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<Panel>\\n  <Panel.Body>Panel content</Panel.Body>\\n  <Panel.Footer>Panel footer</Panel.Footer>\\n</Panel>;\\n\";\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = \"<div>\\n  <Panel>\\n    <Panel.Heading>Panel heading without a title</Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n  <Panel>\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading with a title</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n</div>;\\n\";\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\texports.default = PanelSection;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Anchor = __webpack_require__(12);\n\t\n\tvar _Anchor2 = _interopRequireDefault(_Anchor);\n\t\n\tvar _LinkToSource = __webpack_require__(17);\n\t\n\tvar _LinkToSource2 = _interopRequireDefault(_LinkToSource);\n\t\n\tvar _PropTable = __webpack_require__(14);\n\t\n\tvar _PropTable2 = _interopRequireDefault(_PropTable);\n\t\n\tvar _ReactPlayground = __webpack_require__(13);\n\t\n\tvar _ReactPlayground2 = _interopRequireDefault(_ReactPlayground);\n\t\n\tvar _PanelBasic = __webpack_require__(463);\n\t\n\tvar _PanelBasic2 = _interopRequireDefault(_PanelBasic);\n\t\n\tvar _PanelCollapsible = __webpack_require__(464);\n\t\n\tvar _PanelCollapsible2 = _interopRequireDefault(_PanelCollapsible);\n\t\n\tvar _PanelWithHeading = __webpack_require__(471);\n\t\n\tvar _PanelWithHeading2 = _interopRequireDefault(_PanelWithHeading);\n\t\n\tvar _PanelWithFooter = __webpack_require__(470);\n\t\n\tvar _PanelWithFooter2 = _interopRequireDefault(_PanelWithFooter);\n\t\n\tvar _PanelContextual = __webpack_require__(465);\n\t\n\tvar _PanelContextual2 = _interopRequireDefault(_PanelContextual);\n\t\n\tvar _PanelListGroupFill = __webpack_require__(469);\n\t\n\tvar _PanelListGroupFill2 = _interopRequireDefault(_PanelListGroupFill);\n\t\n\tvar _PanelGroupControlled = __webpack_require__(467);\n\t\n\tvar _PanelGroupControlled2 = _interopRequireDefault(_PanelGroupControlled);\n\t\n\tvar _PanelGroupUncontrolled = __webpack_require__(468);\n\t\n\tvar _PanelGroupUncontrolled2 = _interopRequireDefault(_PanelGroupUncontrolled);\n\t\n\tvar _PanelGroupAccordion = __webpack_require__(466);\n\t\n\tvar _PanelGroupAccordion2 = _interopRequireDefault(_PanelGroupAccordion);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction PanelSection(_ref) {\n\t  var data = _ref.data;\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'bs-docs-section' },\n\t    _react2.default.createElement(\n\t      'h2',\n\t      { className: 'page-header' },\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels' },\n\t        'Panels'\n\t      ),\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'small',\n\t        null,\n\t        'Panel, PanelGroup, Accordion'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-basic' },\n\t        'Basic example'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'By default, all the ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Panel />'\n\t      ),\n\t      ' does is apply a basic border and padding to contain some content.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'You can pass on any additional properties you need, e.g. a custom',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'onClick'\n\t      ),\n\t      ' handler, as it is shown in the example code. They all will apply to the wrapper ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'div'\n\t      ),\n\t      ' element.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelBasic2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-heading' },\n\t        'Panel with heading'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Easily add a heading container to your panel with the',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Panel.Heading>'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Panel.Title>'\n\t      ),\n\t      ' ',\n\t      'sub-components.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelWithHeading2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-footer' },\n\t        'Panel with footer'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Pass buttons or secondary text in the ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Panel.Footer>'\n\t      ),\n\t      ' ',\n\t      'sub-component. Note that panel footers do not inherit colors and borders when using contextual variations as they are not meant to be in the foreground.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelWithFooter2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-contextual' },\n\t        'Contextual alternatives'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Like other components, easily make a panel more meaningful to a particular context by adding a ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'bsStyle'\n\t      ),\n\t      ' prop.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelContextual2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-tables' },\n\t        'With tables and list groups'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Add any ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<Table />'\n\t      ),\n\t      ', ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<ListGroup />'\n\t      ),\n\t      ' ',\n\t      'to a panel for a seamless integration. Mix and match with',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'Panel.Body'\n\t      ),\n\t      ' as needed.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelListGroupFill2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-collapsible' },\n\t        'Collapsible Panel'\n\t      )\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelCollapsible2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-controlled' },\n\t        'Controlled PanelGroups'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'PanelGroup'\n\t      ),\n\t      's can be controlled by a parent component. The',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'activeKey'\n\t      ),\n\t      ' prop dictates which panel is open.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelGroupControlled2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-uncontrolled' },\n\t        'Uncontrolled PanelGroups'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'PanelGroup'\n\t      ),\n\t      's can also be uncontrolled where they manage their own state. The ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'defaultActiveKey'\n\t      ),\n\t      ' prop dictates which panel is open when initially.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelGroupUncontrolled2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-accordion' },\n\t        'Accordions'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Use ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        '<PanelGroup accordion />'\n\t      ),\n\t      ' to create an accordion style collapsing Panel set.'\n\t    ),\n\t    _react2.default.createElement(_ReactPlayground2.default, { codeText: _PanelGroupAccordion2.default }),\n\t    _react2.default.createElement(\n\t      'h3',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props' },\n\t        'Props'\n\t      )\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-accordion' },\n\t        'Panels, Accordion'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.Panel.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.Panel }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-heading' },\n\t        'Panel.Heading'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelHeading.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelHeading }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-title' },\n\t        'Panel.Title'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelTitle.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelTitle }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-toggle' },\n\t        'Panel.Toggle'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelToggle.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelToggle }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-collapse' },\n\t        'Panel.Collapse'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelCollapse.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelCollapse }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-body' },\n\t        'Panel.Body'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelBody.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelBody }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-panel-footer' },\n\t        'Panel.Footer'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelFooter.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelFooter }),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      _react2.default.createElement(\n\t        _Anchor2.default,\n\t        { id: 'panels-props-group' },\n\t        'PanelGroup'\n\t      ),\n\t      _react2.default.createElement(_LinkToSource2.default, { component: data.PanelGroup.displayName })\n\t    ),\n\t    _react2.default.createElement(_PropTable2.default, { metadata: data.PanelGroup })\n\t  );\n\t}\n\t\n\tvar query = exports.query = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-components-panel-js-a50913a3244cb3fa0713.js","module.exports = \"function handleClick() {\\n  alert('You have clicked on me');\\n}\\n\\nconst panelInstance = (\\n  <Panel onClick={handleClick}>\\n    <Panel.Body>Basic panel example</Panel.Body>\\n  </Panel>\\n);\\n\\nrender(panelInstance);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelBasic.js","module.exports = \"class Example extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.state = {\\n      open: true\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={() => this.setState({ open: !this.state.open })}>\\n          Click to toggle\\n        </Button>\\n        <br />\\n        <Panel id=\\\"collapsible-panel-example-1\\\" expanded={this.state.open}>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n\\n        <p>You can also make the Panel heading toggle the collapse.</p>\\n\\n        <Panel id=\\\"collapsible-panel-example-2\\\" defaultExpanded>\\n          <Panel.Heading>\\n            <Panel.Title toggle>\\n              Title that functions as a collapse toggle\\n            </Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n\\n        <p>Or use a Panel.Toggle component to customize</p>\\n\\n        <Panel id=\\\"collapsible-panel-example-3\\\" defaultExpanded>\\n          <Panel.Heading>\\n            <Panel.Title>Title that functions as a collapse toggle</Panel.Title>\\n            <Panel.Toggle componentClass=\\\"a\\\">My own toggle</Panel.Toggle>\\n          </Panel.Heading>\\n          <Panel.Collapse>\\n            <Panel.Body>\\n              Anim pariatur cliche reprehenderit, enim eiusmod high life\\n              accusamus terry richardson ad squid. Nihil anim keffiyeh\\n              helvetica, craft beer labore wes anderson cred nesciunt sapiente\\n              ea proident.\\n            </Panel.Body>\\n          </Panel.Collapse>\\n        </Panel>\\n      </div>\\n    );\\n  }\\n}\\n\\nrender(<Example />);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelCollapsible.js","module.exports = \"<div>\\n  <Panel bsStyle=\\\"primary\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"success\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"info\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"warning\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n\\n  <Panel bsStyle=\\\"danger\\\">\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n</div>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelContextual.js","module.exports = \"<PanelGroup accordion id=\\\"accordion-example\\\">\\n  <Panel eventKey=\\\"1\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #1</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"2\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #2</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"3\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Collapsible Group Item #3</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>\\n      Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\\n      richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard\\n      dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf\\n      moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla\\n      assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore\\n      wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur\\n      butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim\\n      aesthetic synth nesciunt you probably haven't heard of them accusamus\\n      labore sustainable VHS.\\n    </Panel.Body>\\n  </Panel>\\n</PanelGroup>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelGroupAccordion.js","module.exports = \"class ControlledPanelGroup extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleSelect = this.handleSelect.bind(this);\\n\\n    this.state = {\\n      activeKey: '1'\\n    };\\n  }\\n\\n  handleSelect(activeKey) {\\n    this.setState({ activeKey });\\n  }\\n\\n  render() {\\n    return (\\n      <PanelGroup\\n        accordion\\n        id=\\\"accordion-controlled-example\\\"\\n        activeKey={this.state.activeKey}\\n        onSelect={this.handleSelect}\\n      >\\n        <Panel eventKey=\\\"1\\\">\\n          <Panel.Heading>\\n            <Panel.Title toggle>Panel heading 1</Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Body collapsible>Panel content 1</Panel.Body>\\n        </Panel>\\n        <Panel eventKey=\\\"2\\\">\\n          <Panel.Heading>\\n            <Panel.Title toggle>Panel heading 2</Panel.Title>\\n          </Panel.Heading>\\n          <Panel.Body collapsible>Panel content 2</Panel.Body>\\n        </Panel>\\n      </PanelGroup>\\n    );\\n  }\\n}\\n\\nrender(<ControlledPanelGroup />);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelGroupControlled.js","module.exports = \"<PanelGroup accordion id=\\\"accordion-uncontrolled-example\\\" defaultActiveKey=\\\"2\\\">\\n  <Panel eventKey=\\\"1\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Panel heading 1</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>Panel content 1</Panel.Body>\\n  </Panel>\\n  <Panel eventKey=\\\"2\\\">\\n    <Panel.Heading>\\n      <Panel.Title toggle>Panel heading 2</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body collapsible>Panel content 2</Panel.Body>\\n  </Panel>\\n</PanelGroup>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelGroupUncontrolled.js","module.exports = \"<Panel>\\n  <Panel.Heading>Panel heading</Panel.Heading>\\n  <Panel.Body>Some default panel content here.</Panel.Body>\\n  <ListGroup>\\n    <ListGroupItem>Item 1</ListGroupItem>\\n    <ListGroupItem>Item 2</ListGroupItem>\\n    <ListGroupItem>&hellip;</ListGroupItem>\\n  </ListGroup>\\n  <Panel.Body>Some more panel content here.</Panel.Body>\\n</Panel>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelListGroupFill.js","module.exports = \"<Panel>\\n  <Panel.Body>Panel content</Panel.Body>\\n  <Panel.Footer>Panel footer</Panel.Footer>\\n</Panel>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelWithFooter.js","module.exports = \"<div>\\n  <Panel>\\n    <Panel.Heading>Panel heading without a title</Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n  <Panel>\\n    <Panel.Heading>\\n      <Panel.Title componentClass=\\\"h3\\\">Panel heading with a title</Panel.Title>\\n    </Panel.Heading>\\n    <Panel.Body>Panel content</Panel.Body>\\n  </Panel>\\n</div>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/PanelWithHeading.js","import React from 'react';\n\nimport Anchor from '../../components/Anchor';\nimport LinkToSource from '../../components/LinkToSource';\nimport PropTable from '../../components/PropTable';\nimport ReactPlayground from '../../components/ReactPlayground';\n\nimport PanelBasic from '../../examples/PanelBasic';\nimport PanelCollapsible from '../../examples/PanelCollapsible';\nimport PanelWithHeading from '../../examples/PanelWithHeading';\nimport PanelWithFooter from '../../examples/PanelWithFooter';\nimport PanelContextual from '../../examples/PanelContextual';\nimport PanelListGroupFill from '../../examples/PanelListGroupFill';\nimport PanelGroupControlled from '../../examples/PanelGroupControlled';\nimport PanelGroupUncontrolled from '../../examples/PanelGroupUncontrolled';\nimport PanelGroupAccordion from '../../examples/PanelGroupAccordion';\n\nexport default function PanelSection({ data }) {\n  return (\n    <div className=\"bs-docs-section\">\n      <h2 className=\"page-header\">\n        <Anchor id=\"panels\">Panels</Anchor>{' '}\n        <small>Panel, PanelGroup, Accordion</small>\n      </h2>\n\n      <h3>\n        <Anchor id=\"panels-basic\">Basic example</Anchor>\n      </h3>\n      <p>\n        By default, all the <code>&lt;Panel /&gt;</code> does is apply a basic\n        border and padding to contain some content.\n      </p>\n      <p>\n        You can pass on any additional properties you need, e.g. a custom{' '}\n        <code>onClick</code> handler, as it is shown in the example code. They\n        all will apply to the wrapper <code>div</code> element.\n      </p>\n      <ReactPlayground codeText={PanelBasic} />\n\n      <h3>\n        <Anchor id=\"panels-heading\">Panel with heading</Anchor>\n      </h3>\n      <p>\n        Easily add a heading container to your panel with the{' '}\n        <code>{'<Panel.Heading>'}</code> and <code>{'<Panel.Title>'}</code>{' '}\n        sub-components.\n      </p>\n      <ReactPlayground codeText={PanelWithHeading} />\n\n      <h3>\n        <Anchor id=\"panels-footer\">Panel with footer</Anchor>\n      </h3>\n      <p>\n        Pass buttons or secondary text in the <code>{'<Panel.Footer>'}</code>{' '}\n        sub-component. Note that panel footers do not inherit colors and borders\n        when using contextual variations as they are not meant to be in the\n        foreground.\n      </p>\n      <ReactPlayground codeText={PanelWithFooter} />\n\n      <h3>\n        <Anchor id=\"panels-contextual\">Contextual alternatives</Anchor>\n      </h3>\n      <p>\n        Like other components, easily make a panel more meaningful to a\n        particular context by adding a <code>bsStyle</code> prop.\n      </p>\n      <ReactPlayground codeText={PanelContextual} />\n\n      <h3>\n        <Anchor id=\"panels-tables\">With tables and list groups</Anchor>\n      </h3>\n      <p>\n        Add any <code>&lt;Table /&gt;</code>, <code>&lt;ListGroup /&gt;</code>{' '}\n        to a panel for a seamless integration. Mix and match with{' '}\n        <code>{'Panel.Body'}</code> as needed.\n      </p>\n      <ReactPlayground codeText={PanelListGroupFill} />\n\n      <h3>\n        <Anchor id=\"panels-collapsible\">Collapsible Panel</Anchor>\n      </h3>\n      <ReactPlayground codeText={PanelCollapsible} />\n\n      <h3>\n        <Anchor id=\"panels-controlled\">Controlled PanelGroups</Anchor>\n      </h3>\n      <p>\n        <code>PanelGroup</code>s can be controlled by a parent component. The{' '}\n        <code>activeKey</code> prop dictates which panel is open.\n      </p>\n      <ReactPlayground codeText={PanelGroupControlled} />\n\n      <h3>\n        <Anchor id=\"panels-uncontrolled\">Uncontrolled PanelGroups</Anchor>\n      </h3>\n      <p>\n        <code>PanelGroup</code>s can also be uncontrolled where they manage\n        their own state. The <code>defaultActiveKey</code> prop dictates which\n        panel is open when initially.\n      </p>\n      <ReactPlayground codeText={PanelGroupUncontrolled} />\n\n      <h3>\n        <Anchor id=\"panels-accordion\">Accordions</Anchor>\n      </h3>\n      <p>\n        Use <code>&lt;PanelGroup accordion /&gt;</code> to create an accordion\n        style collapsing Panel set.\n      </p>\n      <ReactPlayground codeText={PanelGroupAccordion} />\n\n      <h3>\n        <Anchor id=\"panels-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"panels-props-accordion\">Panels, Accordion</Anchor>\n        <LinkToSource component={data.Panel.displayName} />\n      </h4>\n      <PropTable metadata={data.Panel} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-heading\">Panel.Heading</Anchor>\n        <LinkToSource component={data.PanelHeading.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelHeading} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-title\">Panel.Title</Anchor>\n        <LinkToSource component={data.PanelTitle.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelTitle} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-toggle\">Panel.Toggle</Anchor>\n        <LinkToSource component={data.PanelToggle.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelToggle} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-collapse\">Panel.Collapse</Anchor>\n        <LinkToSource component={data.PanelCollapse.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelCollapse} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-body\">Panel.Body</Anchor>\n        <LinkToSource component={data.PanelBody.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelBody} />\n\n      <h4>\n        <Anchor id=\"panels-props-panel-footer\">Panel.Footer</Anchor>\n        <LinkToSource component={data.PanelFooter.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelFooter} />\n\n      <h4>\n        <Anchor id=\"panels-props-group\">PanelGroup</Anchor>\n        <LinkToSource component={data.PanelGroup.displayName} />\n      </h4>\n      <PropTable metadata={data.PanelGroup} />\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query PanelQuery {\n    Panel: componentMetadata(displayName: { eq: \"Panel\" }) {\n      ...PropTable_metadata\n    }\n    PanelHeading: componentMetadata(displayName: { eq: \"PanelHeading\" }) {\n      ...PropTable_metadata\n    }\n    PanelTitle: componentMetadata(displayName: { eq: \"PanelTitle\" }) {\n      ...PropTable_metadata\n    }\n    PanelBody: componentMetadata(displayName: { eq: \"PanelBody\" }) {\n      ...PropTable_metadata\n    }\n    PanelFooter: componentMetadata(displayName: { eq: \"PanelFooter\" }) {\n      ...PropTable_metadata\n    }\n    PanelToggle: componentMetadata(displayName: { eq: \"PanelToggle\" }) {\n      ...PropTable_metadata\n    }\n    PanelCollapse: componentMetadata(displayName: { eq: \"PanelCollapse\" }) {\n      ...PropTable_metadata\n    }\n    PanelGroup: componentMetadata(displayName: { eq: \"PanelGroup\" }) {\n      ...PropTable_metadata\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/panel.js"],"sourceRoot":""}