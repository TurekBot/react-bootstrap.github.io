{"version":3,"sources":["webpack:///./src/pages/components/forms.js","webpack:///./src/examples/FormBasic.js","webpack:///./src/examples/FormControls.js","webpack:///./src/examples/FormHorizontal.js","webpack:///./src/examples/FormInline.js","webpack:///./src/examples/FormInputAddons.js","webpack:///./src/examples/FormInputSizes.js","webpack:///./src/examples/FormValidation.js"],"names":["_ref","data","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","className","__WEBPACK_IMPORTED_MODULE_1__components_Anchor__","id","__WEBPACK_IMPORTED_MODULE_4__components_ReactPlayground__","codeText","__WEBPACK_IMPORTED_MODULE_5__examples_FormBasic___default","__WEBPACK_IMPORTED_MODULE_2__components_LinkToSource__","component","FormGroup","displayName","__WEBPACK_IMPORTED_MODULE_3__components_PropTable__","metadata","FormControl","ControlLabel","__WEBPACK_IMPORTED_MODULE_6__examples_FormControls___default","Checkbox","Radio","FormControlStatic","HelpBlock","__WEBPACK_IMPORTED_MODULE_7__examples_FormInline___default","__WEBPACK_IMPORTED_MODULE_8__examples_FormHorizontal___default","Form","__WEBPACK_IMPORTED_MODULE_10__examples_FormInputAddons___default","__WEBPACK_IMPORTED_MODULE_9__examples_FormInputSizes___default","InputGroup","InputGroupAddon","InputGroupButton","__WEBPACK_IMPORTED_MODULE_11__examples_FormValidation___default","FormControlFeedback","query","module","exports"],"mappings":"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","file":"component---src-pages-components-forms-js-64380e62d8ae07132d51.js","sourcesContent":["import React from 'react';\n\nimport Anchor from '../../components/Anchor';\nimport LinkToSource from '../../components/LinkToSource';\nimport PropTable from '../../components/PropTable';\nimport ReactPlayground from '../../components/ReactPlayground';\n\nimport FormBasic from '../../examples/FormBasic';\nimport FormControls from '../../examples/FormControls';\nimport FormInline from '../../examples/FormInline';\nimport FormHorizontal from '../../examples/FormHorizontal';\nimport FormInputSizes from '../../examples/FormInputSizes';\nimport FormInputAddons from '../../examples/FormInputAddons';\nimport FormValidation from '../../examples/FormValidation';\n\nexport default function FormControlsSection({ data }) {\n  return (\n    <div className=\"bs-docs-section\">\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms\">Forms</Anchor>{' '}\n        <small>FormGroup, FormControl, ControlLabel</small>\n      </h2>\n\n      <p>\n        The <code>{'<FormControl>'}</code> component renders a form control with\n        Bootstrap styling. The <code>{'<FormGroup>'}</code> component wraps a\n        form control with proper spacing, along with support for a label, help\n        text, and validation state. To ensure accessibility, set{' '}\n        <code>controlId</code> on <code>{'<FormGroup>'}</code>, and use{' '}\n        <code>{'<ControlLabel>'}</code> for the label.\n      </p>\n\n      <ReactPlayground codeText={FormBasic} />\n\n      <p>\n        The <code>{'<FormControl>'}</code> component directly renders the{' '}\n        <code>{'<input>'}</code> or other specified component. If you need to\n        access the value of an uncontrolled <code>{'<FormControl>'}</code>,\n        attach a <code>ref</code> to it as you would with an uncontrolled input,\n        then call <code>ReactDOM.findDOMNode(ref)</code> to get the DOM node.\n        You can then interact with that node as you would with any other\n        uncontrolled input.\n      </p>\n      <p>\n        If your application contains a large number of form groups, we recommend\n        building a higher-level component encapsulating a complete field group\n        that renders the label, the control, and any other necessary components.\n        We don't provide this out-of-the-box, because the composition of those\n        field groups is too specific to an individual application to admit a\n        good one-size-fits-all solution.\n      </p>\n\n      <h3>\n        <Anchor id=\"forms-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form-group\">FormGroup</Anchor>\n        <LinkToSource component={data.FormGroup.displayName} />\n      </h4>\n      <PropTable metadata={data.FormGroup} />\n\n      <h4>\n        <Anchor id=\"forms-props-form-control\">FormControl</Anchor>\n        <LinkToSource component={data.FormControl.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControl} />\n\n      <h4>\n        <Anchor id=\"forms-props-control-label\">ControlLabel</Anchor>\n        <LinkToSource component={data.ControlLabel.displayName} />\n      </h4>\n      <PropTable metadata={data.ControlLabel} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-controls\">Supported controls</Anchor>{' '}\n        <small>Checkbox, Radio, FormControl.Static, HelpBlock</small>\n      </h2>\n\n      <p>\n        Examples of standard form controls supported in an example form layout,\n        using a custom <code>{'<FieldGroup>'}</code> component. Use{' '}\n        <code>{'<FormControl>'}</code> for <code>{'<input>'}</code>,{' '}\n        <code>{'<textarea>'}</code>, and <code>{'<select>'}</code>. Use{' '}\n        <code>{'<Checkbox>'}</code> and <code>{'<Radio>'}</code> for checkboxes\n        and radios respectively, optionally with <code>inline</code> to render\n        multiple on the same line. Use <code>{'<FormControl.Static>'}</code> for\n        static text.\n      </p>\n      <ReactPlayground codeText={FormControls} />\n\n      <h3>\n        <Anchor id=\"forms-controls-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-checkbox\">Checkbox</Anchor>\n        <LinkToSource component={data.Checkbox.displayName} />\n      </h4>\n      <PropTable metadata={data.Checkbox} />\n\n      <h4>\n        <Anchor id=\"forms-props-radio\">Radio</Anchor>\n        <LinkToSource component={data.Radio.displayName} />\n      </h4>\n      <PropTable metadata={data.Radio} />\n\n      <h4>\n        <Anchor id=\"forms-props-form-control-static\">FormControl.Static</Anchor>\n        <LinkToSource component={data.FormControlStatic.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControlStatic} />\n\n      <h4>\n        <Anchor id=\"forms-props-help-block\">HelpBlock</Anchor>\n        <LinkToSource component={data.HelpBlock.displayName} />\n      </h4>\n      <PropTable metadata={data.HelpBlock} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-layout\">Form layout</Anchor> <small>Form</small>\n      </h2>\n\n      <h3>\n        <Anchor id=\"forms-inline\">Inline forms</Anchor>\n      </h3>\n      <p>\n        Use <code>{'<Form inline>'}</code> instead of <code>{'<form>'}</code>.\n        JSX strips whitespace between lines, so you will need to manually add\n        spaces. Additionally, Bootstrap assigns inline form controls{' '}\n        <code>width: auto</code> by default, so you may need to set custom\n        widths.\n      </p>\n      <ReactPlayground codeText={FormInline} />\n\n      <h3>\n        <Anchor id=\"forms-horizontal\">Horizontal forms</Anchor>\n      </h3>\n      <p>\n        Use <code>{'<Form horizontal>'}</code> instead of{' '}\n        <code>{'<form>'}</code>, then use <code>{'<Col>'}</code>s to align\n        labels and controls. Do not use <code>{'<Row>'}</code> here, as{' '}\n        <code>{'<FormGroup>'}</code> will already serve as a grid row in a\n        horizontal form.\n      </p>\n      <ReactPlayground codeText={FormHorizontal} />\n\n      <h3>\n        <Anchor id=\"forms-layout-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form\">Form</Anchor>\n        <LinkToSource component={data.Form.displayName} />\n        <small>(only needed for horizontal or inline forms)</small>\n      </h4>\n      <PropTable metadata={data.Form} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-input-groups\">Input groups</Anchor>\n        <small>InputGroup, InputGroup.Addon, InputGroup.Button</small>\n      </h2>\n\n      <h3>\n        <Anchor id=\"forms-input-addons\">Input add-ons</Anchor>\n      </h3>\n      <p>\n        Wrap your form control in an <code>{'<InputGroup>'}</code>, then use for\n        normal add-ons and for button add-ons. Exotic configurations may require\n        CSS on your side.\n      </p>\n      <ReactPlayground codeText={FormInputAddons} />\n\n      <h3>\n        <Anchor id=\"forms-input-sizes\">Input sizes</Anchor>\n      </h3>\n      <p>\n        Use <code>bsSize</code> on <code>{'<FormGroup>'}</code> or{' '}\n        <code>{'<InputGroup>'}</code> to change the size of inputs. It also\n        works with add-ons and most other options.\n      </p>\n      <ReactPlayground codeText={FormInputSizes} />\n\n      <h3>\n        <Anchor id=\"forms-input-groups-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-input-group\">InputGroup</Anchor>\n        <LinkToSource component={data.InputGroup.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroup} />\n\n      <h4>\n        <Anchor id=\"forms-props-input-group-addon\">InputGroup.Addon</Anchor>\n        <LinkToSource component={data.InputGroupAddon.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroupAddon} />\n\n      <h4>\n        <Anchor id=\"forms-props-input-group-button\">InputGroup.Button</Anchor>\n        <LinkToSource component={data.InputGroupButton.displayName} />\n      </h4>\n      <PropTable metadata={data.InputGroupButton} />\n\n      <h2 className=\"page-header\">\n        <Anchor id=\"forms-validation\">Validation states</Anchor>\n        <small>FormControl.Feedback</small>\n      </h2>\n\n      <p>\n        Set <code>validationState</code> to one of <code>'success'</code>,{' '}\n        <code>'warning'</code> or <code>'error'</code> to show validation state.\n        Set <code>validationState</code> to <code>null</code> (or{' '}\n        <code>undefined</code>) to hide validation state. Add{' '}\n        <code>{'<FormControl.Feedback>'}</code> for a feedback icon when\n        validation state is set.\n      </p>\n      <ReactPlayground codeText={FormValidation} />\n\n      <h3>\n        <Anchor id=\"forms-validation-props\">Props</Anchor>\n      </h3>\n\n      <h4>\n        <Anchor id=\"forms-props-form-control-feedback\">\n          FormControl.Feedback\n        </Anchor>\n        <LinkToSource component={data.FormControlFeedback.displayName} />\n      </h4>\n      <PropTable metadata={data.FormControlFeedback} />\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query FormQuery {\n    Form: componentMetadata(displayName: { eq: \"Form\" }) {\n      ...PropTable_metadata\n    }\n    FormGroup: componentMetadata(displayName: { eq: \"FormGroup\" }) {\n      ...PropTable_metadata\n    }\n    FormControl: componentMetadata(displayName: { eq: \"FormControl\" }) {\n      ...PropTable_metadata\n    }\n    ControlLabel: componentMetadata(displayName: { eq: \"ControlLabel\" }) {\n      ...PropTable_metadata\n    }\n    Checkbox: componentMetadata(displayName: { eq: \"Checkbox\" }) {\n      ...PropTable_metadata\n    }\n    Radio: componentMetadata(displayName: { eq: \"Radio\" }) {\n      ...PropTable_metadata\n    }\n    FormControlStatic: componentMetadata(\n      displayName: { eq: \"FormControlStatic\" }\n    ) {\n      ...PropTable_metadata\n    }\n    HelpBlock: componentMetadata(displayName: { eq: \"HelpBlock\" }) {\n      ...PropTable_metadata\n    }\n    InputGroup: componentMetadata(displayName: { eq: \"InputGroup\" }) {\n      ...PropTable_metadata\n    }\n    InputGroupAddon: componentMetadata(displayName: { eq: \"InputGroupAddon\" }) {\n      ...PropTable_metadata\n    }\n    InputGroupButton: componentMetadata(\n      displayName: { eq: \"InputGroupButton\" }\n    ) {\n      ...PropTable_metadata\n    }\n    FormControlFeedback: componentMetadata(\n      displayName: { eq: \"FormControlFeedback\" }\n    ) {\n      ...PropTable_metadata\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/components/forms.js","module.exports = \"class FormExample extends React.Component {\\n  constructor(props, context) {\\n    super(props, context);\\n\\n    this.handleChange = this.handleChange.bind(this);\\n\\n    this.state = {\\n      value: ''\\n    };\\n  }\\n\\n  getValidationState() {\\n    const length = this.state.value.length;\\n    if (length > 10) return 'success';\\n    else if (length > 5) return 'warning';\\n    else if (length > 0) return 'error';\\n    return null;\\n  }\\n\\n  handleChange(e) {\\n    this.setState({ value: e.target.value });\\n  }\\n\\n  render() {\\n    return (\\n      <form>\\n        <FormGroup\\n          controlId=\\\"formBasicText\\\"\\n          validationState={this.getValidationState()}\\n        >\\n          <ControlLabel>Working example with validation</ControlLabel>\\n          <FormControl\\n            type=\\\"text\\\"\\n            value={this.state.value}\\n            placeholder=\\\"Enter text\\\"\\n            onChange={this.handleChange}\\n          />\\n          <FormControl.Feedback />\\n          <HelpBlock>Validation is based on string length.</HelpBlock>\\n        </FormGroup>\\n      </form>\\n    );\\n  }\\n}\\n\\nrender(<FormExample />);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormBasic.js","module.exports = \"function FieldGroup({ id, label, help, ...props }) {\\n  return (\\n    <FormGroup controlId={id}>\\n      <ControlLabel>{label}</ControlLabel>\\n      <FormControl {...props} />\\n      {help && <HelpBlock>{help}</HelpBlock>}\\n    </FormGroup>\\n  );\\n}\\n\\nconst formInstance = (\\n  <form>\\n    <FieldGroup\\n      id=\\\"formControlsText\\\"\\n      type=\\\"text\\\"\\n      label=\\\"Text\\\"\\n      placeholder=\\\"Enter text\\\"\\n    />\\n    <FieldGroup\\n      id=\\\"formControlsEmail\\\"\\n      type=\\\"email\\\"\\n      label=\\\"Email address\\\"\\n      placeholder=\\\"Enter email\\\"\\n    />\\n    <FieldGroup id=\\\"formControlsPassword\\\" label=\\\"Password\\\" type=\\\"password\\\" />\\n    <FieldGroup\\n      id=\\\"formControlsFile\\\"\\n      type=\\\"file\\\"\\n      label=\\\"File\\\"\\n      help=\\\"Example block-level help text here.\\\"\\n    />\\n\\n    <Checkbox checked readOnly>\\n      Checkbox\\n    </Checkbox>\\n    <Radio checked readOnly>\\n      Radio\\n    </Radio>\\n\\n    <FormGroup>\\n      <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>{' '}\\n      <Checkbox inline>3</Checkbox>\\n    </FormGroup>\\n    <FormGroup>\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        1\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        2\\n      </Radio>{' '}\\n      <Radio name=\\\"radioGroup\\\" inline>\\n        3\\n      </Radio>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsSelect\\\">\\n      <ControlLabel>Select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" placeholder=\\\"select\\\">\\n        <option value=\\\"select\\\">select</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n    <FormGroup controlId=\\\"formControlsSelectMultiple\\\">\\n      <ControlLabel>Multiple select</ControlLabel>\\n      <FormControl componentClass=\\\"select\\\" multiple>\\n        <option value=\\\"select\\\">select (multiple)</option>\\n        <option value=\\\"other\\\">...</option>\\n      </FormControl>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formControlsTextarea\\\">\\n      <ControlLabel>Textarea</ControlLabel>\\n      <FormControl componentClass=\\\"textarea\\\" placeholder=\\\"textarea\\\" />\\n    </FormGroup>\\n\\n    <FormGroup>\\n      <ControlLabel>Static text</ControlLabel>\\n      <FormControl.Static>email@example.com</FormControl.Static>\\n    </FormGroup>\\n\\n    <Button type=\\\"submit\\\">Submit</Button>\\n  </form>\\n);\\n\\nrender(formInstance);\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormControls.js","module.exports = \"<Form horizontal>\\n  <FormGroup controlId=\\\"formHorizontalEmail\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Email\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"email\\\" placeholder=\\\"Email\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formHorizontalPassword\\\">\\n    <Col componentClass={ControlLabel} sm={2}>\\n      Password\\n    </Col>\\n    <Col sm={10}>\\n      <FormControl type=\\\"password\\\" placeholder=\\\"Password\\\" />\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Checkbox>Remember me</Checkbox>\\n    </Col>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <Col smOffset={2} sm={10}>\\n      <Button type=\\\"submit\\\">Sign in</Button>\\n    </Col>\\n  </FormGroup>\\n</Form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormHorizontal.js","module.exports = \"<Form inline>\\n  <FormGroup controlId=\\\"formInlineName\\\">\\n    <ControlLabel>Name</ControlLabel>{' '}\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Jane Doe\\\" />\\n  </FormGroup>{' '}\\n  <FormGroup controlId=\\\"formInlineEmail\\\">\\n    <ControlLabel>Email</ControlLabel>{' '}\\n    <FormControl type=\\\"email\\\" placeholder=\\\"jane.doe@example.com\\\" />\\n  </FormGroup>{' '}\\n  <Button type=\\\"submit\\\">Send invitation</Button>\\n</Form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInline.js","module.exports = \"<form>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>$</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>.00</InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <InputGroup.Addon>\\n        <Glyphicon glyph=\\\"music\\\" />\\n      </InputGroup.Addon>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Button>\\n        <Button>Before</Button>\\n      </InputGroup.Button>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <FormControl type=\\\"text\\\" />\\n      <DropdownButton\\n        componentClass={InputGroup.Button}\\n        id=\\\"input-dropdown-addon\\\"\\n        title=\\\"Action\\\"\\n      >\\n        <MenuItem key=\\\"1\\\">Item</MenuItem>\\n      </DropdownButton>\\n    </InputGroup>\\n  </FormGroup>\\n\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"radio\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n  <FormGroup>\\n    <InputGroup>\\n      <InputGroup.Addon>\\n        <input type=\\\"checkbox\\\" aria-label=\\\"...\\\" />\\n      </InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInputAddons.js","module.exports = \"<form>\\n  <FormGroup bsSize=\\\"large\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Large text\\\" />\\n  </FormGroup>\\n  <FormGroup>\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Normal text\\\" />\\n  </FormGroup>\\n  <FormGroup bsSize=\\\"small\\\">\\n    <FormControl type=\\\"text\\\" placeholder=\\\"Small text\\\" />\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormInputSizes.js","module.exports = \"<form>\\n  <FormGroup controlId=\\\"formValidationSuccess1\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <HelpBlock>Help text with validation state.</HelpBlock>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning1\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError1\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationNull\\\" validationState={null}>\\n    <ControlLabel>Input with no validation state</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess2\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning2\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input with warning and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationError2\\\" validationState=\\\"error\\\">\\n    <ControlLabel>Input with error and feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationSuccess3\\\" validationState=\\\"success\\\">\\n    <ControlLabel>Input with success and custom feedback icon</ControlLabel>\\n    <FormControl type=\\\"text\\\" />\\n    <FormControl.Feedback>\\n      <Glyphicon glyph=\\\"music\\\" />\\n    </FormControl.Feedback>\\n  </FormGroup>\\n\\n  <FormGroup controlId=\\\"formValidationWarning3\\\" validationState=\\\"warning\\\">\\n    <ControlLabel>Input group with warning</ControlLabel>\\n    <InputGroup>\\n      <InputGroup.Addon>@</InputGroup.Addon>\\n      <FormControl type=\\\"text\\\" />\\n    </InputGroup>\\n    <FormControl.Feedback />\\n  </FormGroup>\\n\\n  <Form componentClass=\\\"fieldset\\\" horizontal>\\n    <FormGroup controlId=\\\"formValidationError3\\\" validationState=\\\"error\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input with error\\n      </Col>\\n      <Col xs={9}>\\n        <FormControl type=\\\"text\\\" />\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n\\n    <FormGroup controlId=\\\"formValidationSuccess4\\\" validationState=\\\"success\\\">\\n      <Col componentClass={ControlLabel} xs={3}>\\n        Input group with success\\n      </Col>\\n      <Col xs={9}>\\n        <InputGroup>\\n          <InputGroup.Addon>@</InputGroup.Addon>\\n          <FormControl type=\\\"text\\\" />\\n        </InputGroup>\\n        <FormControl.Feedback />\\n      </Col>\\n    </FormGroup>\\n  </Form>\\n\\n  <Form componentClass=\\\"fieldset\\\" inline>\\n    <FormGroup controlId=\\\"formValidationWarning4\\\" validationState=\\\"warning\\\">\\n      <ControlLabel>Input with warning</ControlLabel>{' '}\\n      <FormControl type=\\\"text\\\" />\\n      <FormControl.Feedback />\\n    </FormGroup>{' '}\\n    <FormGroup controlId=\\\"formValidationError4\\\" validationState=\\\"error\\\">\\n      <ControlLabel>Input group with error</ControlLabel>{' '}\\n      <InputGroup>\\n        <InputGroup.Addon>@</InputGroup.Addon>\\n        <FormControl type=\\\"text\\\" />\\n      </InputGroup>\\n      <FormControl.Feedback />\\n    </FormGroup>\\n  </Form>\\n\\n  <Checkbox validationState=\\\"success\\\">Checkbox with success</Checkbox>\\n  <Radio validationState=\\\"warning\\\">Radio with warning</Radio>\\n  <Checkbox validationState=\\\"error\\\">Checkbox with error</Checkbox>\\n\\n  {/* This requires React 15's <span>-less spaces to be exactly correct. */}\\n  <FormGroup validationState=\\\"success\\\">\\n    <Checkbox inline>Checkbox</Checkbox> <Checkbox inline>with</Checkbox>{' '}\\n    <Checkbox inline>success</Checkbox>\\n  </FormGroup>\\n</form>;\\n\"\n\n\n// WEBPACK FOOTER //\n// ./src/examples/FormValidation.js"],"sourceRoot":""}