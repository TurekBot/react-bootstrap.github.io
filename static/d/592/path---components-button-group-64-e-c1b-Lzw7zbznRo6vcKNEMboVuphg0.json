{"data":{"ButtonGroup":{"composes":null,"displayName":"ButtonGroup","description":null,"props":[{"name":"vertical","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"justified","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"block","doclets":{"type":"{bool}"},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display block buttons; only useful when used with the \"vertical\" prop.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":"all(\n  PropTypes.bool,\n  ({ block, vertical }) =>\n    block && !vertical\n      ? new Error('`block` requires `vertical` to be set to have any effect')\n      : null\n)"}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'btn-group'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"ButtonToolbar":{"composes":null,"displayName":"ButtonToolbar","description":null,"props":[{"name":"bsClass","doclets":{},"defaultValue":{"value":"'btn-toolbar'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"ToggleButtonGroup":{"composes":null,"displayName":"ToggleButtonGroup","description":null,"props":[{"name":"name","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An HTML <code class=\"language-text\">&lt;input&gt;</code> name for each child button.</p>\n<p><strong>Required if <code class=\"language-text\">type</code> is set to <code class=\"language-text\">&#39;radio&#39;</code></strong></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"value","doclets":{"controllable":"onChange"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The value, or array of values, of the active (pressed) buttons</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"onChange","doclets":{"controllable":"values"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired when a button is pressed, depending on whether the <code class=\"language-text\">type</code>\nis <code class=\"language-text\">&#39;radio&#39;</code> or <code class=\"language-text\">&#39;checkbox&#39;</code>, <code class=\"language-text\">onChange</code> will be called with the value or\narray of active values</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"type","doclets":{},"defaultValue":{"value":"'radio'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The input <code class=\"language-text\">type</code> of the rendered buttons, determines the toggle behavior\nof the buttons</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'checkbox'","computed":false},{"value":"'radio'","computed":false}],"raw":null}}]},"ToggleButton":{"composes":null,"displayName":"ToggleButton","description":null,"props":[{"name":"type","doclets":{"type":"{[type]}"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The <code class=\"language-text\">&lt;input&gt;</code> <code class=\"language-text\">type</code></p>"}},"required":false,"type":{"name":"[type]","value":[{"value":"'checkbox'","computed":false},{"value":"'radio'","computed":false}],"raw":null}},{"name":"name","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML input name, used to group like checkboxes or radio buttons together\nsemantically</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"checked","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The checked state of the input, managed by `<ToggleButtonGroup><code class=\"language-text\"></code> automatically</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The disabled state of both the label and input</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onChange","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>[onChange description]</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"value","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The value of the input, and unique identifier in the ToggleButtonGroup</p>"}},"required":true,"type":{"name":"any","value":null,"raw":null}}]}},"pageContext":{}}