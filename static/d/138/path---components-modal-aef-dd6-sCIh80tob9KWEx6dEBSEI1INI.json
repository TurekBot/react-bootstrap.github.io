{"data":{"Modal":{"composes":["react-overlays/Modal","./ModalDialog"],"displayName":"Modal","description":null,"props":[{"name":"backdrop","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Include a backdrop component. Specify 'static' for a backdrop that doesn't\ntrigger an \"onHide\" when clicked.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'static'","computed":false},{"value":"true","computed":false},{"value":"false","computed":false}],"raw":null}},{"name":"backdropClassName","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Add an optional extra class name to .modal-backdrop\nIt could end up looking like class=\"modal-backdrop foo-modal-backdrop in\".</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"keyboard","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Close the modal when escape key is pressed</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"animation","doclets":{},"defaultValue":{"value":"true","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Open and close the Modal with a slide and fade animation.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"dialogClassName","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A css class to apply to the Modal dialog DOM node.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"dialogAs","doclets":{},"defaultValue":{"value":"ModalDialog","computed":true},"description":{"childMarkdownRemark":{"html":"<p>A Component type that provides the modal content Markup. This is a useful\nprop when you want to use your own styles and markup to create a custom\nmodal component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"centered","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify whether the Component should be vertically centered.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"autoFocus","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>When <code class=\"language-text\">true</code> The modal will automatically shift focus to itself when it\nopens, and replace it to the last focused element when it closes.\nGenerally this should never be set to false as it makes the Modal less\naccessible to assistive technologies, like screen-readers.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"enforceFocus","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>When <code class=\"language-text\">true</code> The modal will prevent focus from leaving the Modal while\nopen. Consider leaving the default value here, as it is necessary to make\nthe Modal work well with assistive technologies, such as screen readers.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"restoreFocus","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>When <code class=\"language-text\">true</code> The modal will restore focus to previously focused element once\nmodal is hidden</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"show","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>When <code class=\"language-text\">true</code> The modal will show itself.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onHide","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the header closeButton or non-static backdrop is\nclicked. Required if either are specified.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEnter","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired before the Modal transitions in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntering","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired as the Modal begins to transition in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onEntered","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the Modal finishes transitioning in</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExit","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired right before the Modal transitions out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExiting","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired as the Modal begins to transition out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onExited","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired after the Modal finishes transitioning out</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"container","doclets":{"private":true},"defaultValue":null,"description":null,"required":false,"type":{"name":"custom","value":null,"raw":"BaseModal.propTypes.container"}},{"name":"manager","doclets":{},"defaultValue":{"value":"new BootstrapModalManager()","computed":false},"description":null,"required":false,"type":null}]},"ModalDialog":{"composes":null,"displayName":"ModalDialog","description":null,"props":[{"name":"bsPrefix","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"size","doclets":{"type":"('sm'|'lg')"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specifies a large or small modal.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}],"raw":null}},{"name":"centered","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Specify whether the Component should be vertically centered</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"ModalHeader":{"composes":null,"displayName":"ModalHeader","description":null,"props":[{"name":"bsPrefix","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"closeLabel","doclets":{},"defaultValue":{"value":"'Close'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Provides an accessible label for the close\nbutton. It is used for Assistive Technology when the label text is not\nreadable.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"closeButton","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Specify whether the Component should contain a close button</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onHide","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A Callback fired when the close button is clicked. If used directly inside\na Modal component, the onHide will automatically be propagated up to the\nparent Modal <code class=\"language-text\">onHide</code>.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}}]},"ModalTitle":{"composes":null,"displayName":"ModalTitle","description":null,"props":[{"name":"bsPrefix","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"divWithClassName('h4')","computed":true},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}}]},"ModalBody":{"composes":null,"displayName":"ModalBody","description":null,"props":[{"name":"bsPrefix","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}}]},"ModalFooter":{"composes":null,"displayName":"ModalFooter","description":null,"props":[{"name":"bsPrefix","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}}]}},"pageContext":{}}