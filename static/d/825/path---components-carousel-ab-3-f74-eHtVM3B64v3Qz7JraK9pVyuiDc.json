{"data":{"carousel":{"composes":null,"displayName":"Carousel","description":null,"props":[{"name":"slide","doclets":{},"defaultValue":{"value":"true","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"indicators","doclets":{},"defaultValue":{"value":"true","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"interval","doclets":{},"defaultValue":{"value":"5000","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The amount of time to delay between automatically cycling an item.\nIf <code class=\"language-text\">null</code>, carousel will not automatically cycle.</p>"}},"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"controls","doclets":{},"defaultValue":{"value":"true","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"pauseOnHover","doclets":{},"defaultValue":{"value":"true","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"wrap","doclets":{},"defaultValue":{"value":"true","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"onSelect","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Callback fired when the active item changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span>eventKey<span class=\"token punctuation\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span>event<span class=\"token punctuation\">:</span> Object<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> any</code></pre></div>\n<p>If this callback takes two or more arguments, the second argument will\nbe a persisted event object with <code class=\"language-text\">direction</code> set to the direction of the\ntransition.</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onSlideEnd","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"activeIndex","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"defaultActiveIndex","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"number","value":null,"raw":null}},{"name":"direction","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"enum","value":[{"value":"'prev'","computed":false},{"value":"'next'","computed":false}],"raw":null}},{"name":"prevIcon","doclets":{},"defaultValue":{"value":"<Glyphicon glyph=\"chevron-left\" />","computed":false},"description":null,"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"prevLabel","doclets":{},"defaultValue":{"value":"'Previous'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Label shown to screen readers only, can be used to show the previous element\nin the carousel.\nSet to null to deactivate.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"nextIcon","doclets":{},"defaultValue":{"value":"<Glyphicon glyph=\"chevron-right\" />","computed":false},"description":null,"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"nextLabel","doclets":{},"defaultValue":{"value":"'Next'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Label shown to screen readers only, can be used to show the next element\nin the carousel.\nSet to null to deactivate.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'carousel'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"item":{"composes":null,"displayName":"CarouselItem","description":null,"props":[{"name":"direction","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"enum","value":[{"value":"'prev'","computed":false},{"value":"'next'","computed":false}],"raw":null}},{"name":"onAnimateOutEnd","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"active","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"animateIn","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"animateOut","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"index","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"number","value":null,"raw":null}}]},"caption":{"composes":null,"displayName":"CarouselCaption","description":null,"props":[{"name":"componentClass","doclets":{},"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'carousel-caption'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{}}