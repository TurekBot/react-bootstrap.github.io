{"data":{"Form":{"composes":null,"displayName":"Form","description":null,"props":[{"name":"horizontal","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"inline","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"componentClass","doclets":{},"defaultValue":{"value":"'form'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'form'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"FormGroup":{"composes":null,"displayName":"FormGroup","description":null,"props":[{"name":"controlId","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Sets <code class=\"language-text\">id</code> on <code class=\"language-text\">&lt;FormControl&gt;</code> and <code class=\"language-text\">htmlFor</code> on <code class=\"language-text\">&lt;FormGroup.Label&gt;</code>.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"validationState","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"enum","value":[{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'error'","computed":false},{"value":"null","computed":false}],"raw":null}},{"name":"bsSize","doclets":{},"defaultValue":{"value":null,"computed":null},"description":{"childMarkdownRemark":{"html":"<p>Component size variations.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"\"lg\""},{"value":"\"large\""},{"value":"\"sm\""},{"value":"\"small\""}],"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'form-group'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"FormControl":{"composes":null,"displayName":"FormControl","description":null,"props":[{"name":"componentClass","doclets":{},"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"type","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Only relevant if <code class=\"language-text\">componentClass</code> is <code class=\"language-text\">&#39;input&#39;</code>.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"id","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"inputRef","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Attaches a ref to the <code class=\"language-text\">&lt;input&gt;</code> element. Only functions can be used here.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>FormControl inputRef<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ref <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"bsSize","doclets":{},"defaultValue":{"value":null,"computed":null},"description":{"childMarkdownRemark":{"html":"<p>Component size variations.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"\"sm\""},{"value":"\"small\""},{"value":"\"lg\""},{"value":"\"large\""}],"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'form-control'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"ControlLabel":{"composes":null,"displayName":"ControlLabel","description":null,"props":[{"name":"htmlFor","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"srOnly","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'control-label'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"Checkbox":{"composes":null,"displayName":"Checkbox","description":null,"props":[{"name":"inline","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"title","doclets":{},"defaultValue":{"value":"''","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"validationState","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Only valid if <code class=\"language-text\">inline</code> is not set.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'error'","computed":false},{"value":"null","computed":false}],"raw":null}},{"name":"inputRef","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Attaches a ref to the <code class=\"language-text\">&lt;input&gt;</code> element. Only functions can be used here.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Checkbox inputRef<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ref <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'checkbox'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"Radio":{"composes":null,"displayName":"Radio","description":null,"props":[{"name":"inline","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"title","doclets":{},"defaultValue":{"value":"''","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"validationState","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Only valid if <code class=\"language-text\">inline</code> is not set.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'success'","computed":false},{"value":"'warning'","computed":false},{"value":"'error'","computed":false},{"value":"null","computed":false}],"raw":null}},{"name":"inputRef","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Attaches a ref to the <code class=\"language-text\">&lt;input&gt;</code> element. Only functions can be used here.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Radio inputRef<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ref <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'radio'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"FormControlStatic":{"composes":null,"displayName":"FormControlStatic","description":null,"props":[{"name":"componentClass","doclets":{},"defaultValue":{"value":"'p'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'form-control-static'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"HelpBlock":{"composes":null,"displayName":"HelpBlock","description":null,"props":[{"name":"bsClass","doclets":{},"defaultValue":{"value":"'help-block'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"InputGroup":{"composes":null,"displayName":"InputGroup","description":null,"props":[{"name":"bsSize","doclets":{},"defaultValue":{"value":null,"computed":null},"description":{"childMarkdownRemark":{"html":"<p>Component size variations.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"\"lg\""},{"value":"\"large\""},{"value":"\"sm\""},{"value":"\"small\""}],"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'input-group'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"InputGroupAddon":{"composes":null,"displayName":"InputGroupAddon","description":null,"props":[{"name":"bsClass","doclets":{},"defaultValue":{"value":"'input-group-addon'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"InputGroupButton":{"composes":null,"displayName":"InputGroupButton","description":null,"props":[{"name":"bsClass","doclets":{},"defaultValue":{"value":"'input-group-btn'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"FormControlFeedback":{"composes":null,"displayName":"FormControlFeedback","description":null,"props":[{"name":"bsRole","doclets":{},"defaultValue":{"value":"'feedback'","computed":false},"description":null,"required":false,"type":null},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'form-control-feedback'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]}},"pageContext":{}}