{"data":{"DropdownButton":null,"SplitButton":{"displayName":"SplitButton","composes":null,"description":null,"props":[{"name":"id","doclets":[{"tag":"type","value":"{string|number}"},{"tag":"required","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.</p>"}},"required":true,"type":{"name":"string|number","value":null,"raw":null}},{"name":"toggleLabel","doclets":[],"defaultValue":{"value":"'Toggle dropdown'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Accessible label for the toggle; the value of <code class=\"language-text\">title</code> if not specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"href","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An <code class=\"language-text\">href</code> passed to the non-toggle Button</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"target","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An anchor <code class=\"language-text\">target</code> passed to the non-toggle Button</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onClick","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An <code class=\"language-text\">onClick</code> handler passed to the non-toggle Button</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"title","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The content of the non-toggle Button.</p>"}},"required":true,"type":{"name":"node","value":null,"raw":null}},{"name":"disabled","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Disables both Buttons</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"menuRole","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"rootCloseEvent","doclets":[],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Which event when fired outside the component will cause it to be closed.</p>\n<p><em>see <a href=\"#menu-props\">DropdownMenu</a> for more details</em></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"bsPrefix","doclets":[{"tag":"ignore","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"variant","doclets":[{"tag":"ignore","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Component visual or contextual style variants.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"size","doclets":[{"tag":"ignore","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Component size variations.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"Dropdown":null,"DropdownToggle":{"displayName":"DropdownToggle","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'dropdown-toggle'"}],"defaultValue":{"value":"'dropdown-toggle'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"id","doclets":[{"tag":"type","value":"{string|number}"},{"tag":"required","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>An html id attribute, necessary for assistive technologies, such as screen readers.</p>"}},"required":true,"type":{"name":"string|number","value":null,"raw":"isRequiredForA11y(PropTypes.any)"}},{"name":"split","doclets":[],"defaultValue":null,"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"Button","computed":true},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"PropTypes.elementType"}},{"name":"childBsPrefix","doclets":[{"tag":"private","value":true}],"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>to passthrough to the underlying button or whatever from DropdownButton</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"DropdownMenu":null,"DropdownItem":null,"DropdownHeader":{"displayName":"DropdownHeader","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'dropdown-header'"}],"defaultValue":{"value":"'dropdown-header'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":true,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"\"div\"","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"PropTypes.elementType"}}]},"DropdownDivider":{"displayName":"DropdownDivider","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":[{"tag":"default","value":"'dropdown-divider'"}],"defaultValue":{"value":"'dropdown-divider'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p>"}},"required":true,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":[],"defaultValue":{"value":"\"div\"","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"PropTypes.elementType"}}]}},"pageContext":{"frontmatter":{}}}