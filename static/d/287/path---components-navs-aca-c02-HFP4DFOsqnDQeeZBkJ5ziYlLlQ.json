{"data":{"Nav":{"composes":null,"displayName":"Nav","description":null,"props":[{"name":"activeKey","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Marks the NavItem with a matching <code class=\"language-text\">eventKey</code> as active. Has a\nhigher precedence over <code class=\"language-text\">activeHref</code>.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}},{"name":"activeHref","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Marks the child NavItem with a matching <code class=\"language-text\">href</code> prop as active.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"stacked","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>NavItems are be positioned vertically.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"justified","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"custom","value":null,"raw":"all(\n  PropTypes.bool,\n  ({ justified, navbar }) =>\n    justified && navbar\n      ? Error('justified navbar `Nav`s are not supported')\n      : null\n)"}},{"name":"onSelect","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when a NavItem is selected.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>\n Any eventKey<span class=\"token punctuation\">,</span>\n SyntheticEvent event<span class=\"token operator\">?</span>\n<span class=\"token punctuation\">)</span></code></pre></div>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"role","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>ARIA role for the Nav, in the context of a TabContainer, the default will\nbe set to \"tablist\", but can be overridden by the Nav when set explicitly.</p>\n<p>When the role is set to \"tablist\" NavItem focus is managed according to\nthe ARIA authoring practices for tabs:\n<a href=\"https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel\">https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel</a></p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"navbar","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Apply styling an alignment for use in a Navbar. This prop will be set\nautomatically when the Nav is used inside a Navbar.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"pullRight","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Float the Nav to the right. When <code class=\"language-text\">navbar</code> is <code class=\"language-text\">true</code> the appropriate\ncontextual classes are added as well.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"pullLeft","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Float the Nav to the left. When <code class=\"language-text\">navbar</code> is <code class=\"language-text\">true</code> the appropriate\ncontextual classes are added as well.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"bsStyle","doclets":{},"defaultValue":{"value":null,"computed":null},"description":{"childMarkdownRemark":{"html":"<p>Component visual or contextual style variants.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"\"tabs\""},{"value":"\"pills\""}],"raw":null}},{"name":"bsClass","doclets":{},"defaultValue":{"value":"'nav'","computed":null},"description":{"childMarkdownRemark":{"html":"<p>Base CSS class and prefix for the component. Generally one should only change <code class=\"language-text\">bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}}]},"NavItem":{"composes":null,"displayName":"NavItem","description":null,"props":[{"name":"active","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"role","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"href","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onClick","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"onSelect","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"eventKey","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A unique identifier for the Component, the <code class=\"language-text\">eventKey</code> makes it distinguishable from others in a set. Similar to React's <code class=\"language-text\">key</code> prop, in that it only needs to be unique amoungst the Components siblings, not globally.</p>"}},"required":false,"type":{"name":"any","value":null,"raw":null}}]}},"pageContext":{}}