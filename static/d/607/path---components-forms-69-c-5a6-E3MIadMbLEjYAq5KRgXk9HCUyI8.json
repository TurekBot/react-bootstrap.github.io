{"data":{"Form":{"displayName":"Form","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":{"default":"{'form'}"},"defaultValue":{"value":"{'form'}","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"innerRef","doclets":{"type":"{ReactRef}","alias":"ref"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The Form <code class=\"language-text\">ref</code> will be forwarded to the underlying element,\nwhich means, unless it's rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"inline","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Display the series of labels, form controls,\nand buttons on a single horizontal row</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"validated","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Mark a form as having been validated. Setting it to <code class=\"language-text\">true</code> will\ntoggle any validation styles on the forms elements.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'form'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}}]},"FormGroup":{"displayName":"FormGroup","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":{"default":"'form-group'"},"defaultValue":{"value":"'form-group'","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}},{"name":"controlId","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Sets <code class=\"language-text\">id</code> on <code class=\"language-text\">&lt;FormControl&gt;</code> and <code class=\"language-text\">htmlFor</code> on <code class=\"language-text\">&lt;FormGroup.Label&gt;</code>.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"innerRef","doclets":{"type":"{ReactRef}","alias":"ref"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormGroup <code class=\"language-text\">ref</code> will be forwarded to the underlying element.\nUnless the FormGroup is rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}}]},"FormControl":{"displayName":"FormControl","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":{"default":"{'form-control'}"},"defaultValue":{"value":"{'form-control'}","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"ref","doclets":{"type":"{ReactRef}","alias":"{inputRef}"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormControl <code class=\"language-text\">ref</code> will be forwarded to the underlying input element,\nwhich means unless <code class=\"language-text\">as</code> is a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"size","doclets":{"type":"{('sm'|'lg')}"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Input size variants</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}],"raw":null}},{"name":"as","doclets":{"type":"{('input'|'textarea'|elementType)}"},"defaultValue":{"value":"'input'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The underlying HTML element to use when rendering the FormControl.</p>"}},"required":false,"type":{"name":"union","value":[{"name":"'input'"},{"name":"'textarea'"},{"name":"elementType"}],"raw":"elementType"}},{"name":"plaintext","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Render the input as plain text. Generally used along side <code class=\"language-text\">readOnly</code>.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"readOnly","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Make the control readonly</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Make the control disabled</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"value","doclets":{"controllable":"onChange"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The <code class=\"language-text\">value</code> attribute of underlying input</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"onChange","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A callback fired when the <code class=\"language-text\">value</code> prop changes</p>"}},"required":false,"type":{"name":"func","value":null,"raw":null}},{"name":"type","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The HTML input <code class=\"language-text\">type</code>, which is only relevant if <code class=\"language-text\">as</code> is <code class=\"language-text\">&#39;input&#39;</code> (the default).</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"id","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"isValid","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Add \"valid\" validation styles to the control</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Add \"invalid\" validation styles to the control and accompanying label</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"FormLabel":{"displayName":"FormLabel","composes":null,"description":null,"props":[{"name":"bsPrefix","doclets":{"default":"'form-label'"},"defaultValue":{"value":"'form-label'","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"htmlFor","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Uses <code class=\"language-text\">controlId</code> from <code class=\"language-text\">&lt;FormGroup&gt;</code> if not explicitly specified.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"column","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Renders the FormLabel as a <code class=\"language-text\">&lt;Col&gt;</code> component (accepting all the same props),\nas well as adding additional styling for horizontal forms.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"innerRef","doclets":{"type":"{ReactRef}","alias":"ref"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormLabel <code class=\"language-text\">ref</code> will be forwarded to the underlying element.\nUnless the FormLabel is rendered <code class=\"language-text\">as</code> a composite component,\nit will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"srOnly","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Hides the label visually while still allowing it to be\nread by assistive technologies.</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}}]},"FormCheck":{"composes":null,"displayName":"FormCheck","description":null,"props":[{"name":"bsPrefix","doclets":{"default":"'form-check'"},"defaultValue":{"value":"'form-check'","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"inputRef","doclets":{"type":"{ReactRef}","alias":"{ref}"},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>The FormCheck <code class=\"language-text\">ref</code> will be forwarded to the underlying input element,\nwhich means it will be a DOM node, when resolved.</p>"}},"required":false,"type":{"name":"ReactRef","value":null,"raw":null}},{"name":"id","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A HTML id attribute, necessary for proper form accessibility.</p>"}},"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"children","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Provide a function child to manually handle the layout of the FormCheck's inner components.</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-text\"><code class=\"language-text\">&lt;FormCheck&gt;\n  &lt;FormCheck.Input isInvalid type={radio} /&gt;\n  &lt;FormCheck.Label&gt;Allow us to contact you?&lt;/FormCheck.Label&gt;\n  &lt;Feedback type=&quot;invalid&quot;&gt;Yo this is required&lt;/Feedback&gt;\n&lt;/FormCheck&gt;\n```</code></pre>\n      </div>"}},"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"inline","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"disabled","doclets":{},"defaultValue":{"value":"false","computed":false},"description":null,"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"title","doclets":{},"defaultValue":{"value":"''","computed":false},"description":null,"required":false,"type":{"name":"string","value":null,"raw":null}},{"name":"label","doclets":{},"defaultValue":null,"description":null,"required":false,"type":{"name":"node","value":null,"raw":null}},{"name":"type","doclets":{},"defaultValue":{"value":"'checkbox'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>The type of checkable.</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'radio'","computed":false},{"value":"'checkbox'","computed":false}],"raw":null}},{"name":"isValid","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as valid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"isInvalid","doclets":{},"defaultValue":{"value":"false","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Manually style the input as invalid</p>"}},"required":false,"type":{"name":"bool","value":null,"raw":null}},{"name":"feedback","doclets":{},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>A message to display when the input is in a validation state</p>"}},"required":false,"type":{"name":"node","value":null,"raw":null}}]},"Feedback":{"composes":null,"displayName":"Feedback","description":null,"props":[{"name":"type","doclets":{"type":"{('valid'|'invalid')}"},"defaultValue":{"value":"'valid'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Specify whether the feedback is for valid or invalid fields</p>"}},"required":false,"type":{"name":"enum","value":[{"value":"'valid'","computed":false},{"value":"'invalid'","computed":false}],"raw":null}},{"name":"as","doclets":{},"defaultValue":{"value":"'div'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>You can use a custom element type for this component.</p>"}},"required":false,"type":{"name":"custom","value":null,"raw":"elementType"}}]}},"pageContext":{}}