(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{1096:function(e,t){e.exports='<>\n  {/* Hint: inspect the markup to see how the classes differ */}\n  <ThemeProvider prefixes={{ btn: \'my-btn\' }}>\n    <Button variant="primary">My Button</Button>\n  </ThemeProvider>{\' \'}\n  <Button bsPrefix="super-btn" variant="primary">\n    Super button\n  </Button>\n</>;\n'},1097:function(e,t){e.exports='<>\n  <style type="text/css">\n    {`\n    .btn-flat {\n      background-color: purple;\n      color: white;\n    }\n\n    .btn-xxl {\n      padding: 1rem 1.5rem;\n      font-size: 1.5rem;\n    }\n    `}\n  </style>\n\n  <Button variant="flat" size="xxl">\n    flat button\n  </Button>\n</>;\n'},239:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),s=n(315),l=n(120),r=n(312),i=n(1096),c=n.n(i),u=n(1097),m=n.n(u),d=n(297);t.default=Object(d.a)(function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(l.default,{h:"1",id:"custom-styles"},"Theming and Customizing styles."),o.a.createElement("p",null,"Generally, if you stick to the bootstrap defined classes and variants, there isn't anything you need to do to use a custom theme with ReactBootstrap, it just works. There are plently of cases tho where you want to color outside the lines and we try to make that easy to do."),o.a.createElement(l.default,{h:"2",id:"custom-styles-variants"},"New variants and sizes"),o.a.createElement("p",null,"Custom variants and sizes to should follow the leapatternd of the default bootstrap variants, and define css classes matching:"," ",o.a.createElement("code",null,"compontent-*"),". React bootstrap builds the component classNames in a consistent way that you can rely on. For instance this custom Button."),o.a.createElement(r.a,{codeText:m.a}),o.a.createElement(l.default,{h:"2",id:"custom-styles-prefix"},"Prefixing components"),o.a.createElement("p",null,'In some cases you may need to change the base class "prefix" of one or more Components. You can control how a Component prefixes it\'s classes locallyy by changing the ',o.a.createElement("code",null,"bsPrefix")," prop. Or globally via the"," ",o.a.createElement("code",null,"ThemeProvider")," Component."),o.a.createElement(s.a,{theme:"warning"},"Changing prefixes is an escape hatch and generally shouldn't be used"),o.a.createElement(r.a,{codeText:c.a}))})},297:function(e,t,n){"use strict";n.d(t,"a",function(){return r});n(313);var a=n(0),o=n.n(a),s=n(298),l=n(314);function r(e){return function(t){var n=t.location.pathname,a=l.a;return(n.startsWith("/getting-started")||n.startsWith("/layout")||n.startsWith("/components")||n.startsWith("/utilities"))&&(a=s.a),o.a.createElement(a,{location:t.location},o.a.createElement(e,t))}}},315:function(e,t,n){"use strict";var a=n(1),o=n.n(a),s=n(0),l=n.n(s),r=n(316),i={title:o.a.node,children:o.a.node,theme:o.a.oneOf(["danger","warning"])};function c(e){var t=e.title,n=e.children,a=e.theme;return l.a.createElement("aside",{role:"note",className:r[a||"warning"]},t&&l.a.createElement("header",{className:"h5"},t),l.a.createElement("div",null,n))}c.propTypes=i,t.a=c},316:function(e,t,n){e.exports={callout:"Callout-styles-module--callout--1_K3h",warning:"Callout-styles-module--warning--39Zw- Callout-styles-module--callout--1_K3h",danger:"Callout-styles-module--danger--19388 Callout-styles-module--callout--1_K3h"}}}]);
//# sourceMappingURL=component---src-pages-getting-started-theming-js-e2ca9b3e1778c3173b17.js.map