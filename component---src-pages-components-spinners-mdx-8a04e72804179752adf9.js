(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{1108:function(n,e,a){"use strict";a.r(e),a.d(e,"query",function(){return O}),a.d(e,"_frontmatter",function(){return h}),a.d(e,"default",function(){return v});a(10),a(9),a(8),a(12),a(24),a(0);var t=a(122),i=a(273),r=a(1065),o=a(1064),s=a(1313),d=a.n(s),p=a(1314),m=a.n(p),c=a(1315),l=a.n(c),b=a(1316),u=a.n(b),x=a(1317),y=a.n(x),g=a(1318),j=a.n(g);var O="3121847955",h={},S={query:O,_frontmatter:h},f=i.a;function v(n){var e=n.components,a=function(n,e){if(null==n)return{};var a,t,i={},r=Object.keys(n);for(t=0;t<r.length;t++)a=r[t],e.indexOf(a)>=0||(i[a]=n[a]);return i}(n,["components"]);return Object(t.mdx)(f,Object.assign({},S,a,{components:e,mdxType:"MDXLayout"}),Object(t.mdx)("h1",{id:"spinners"},"Spinners"),Object(t.mdx)("p",null,"Spinners can be used to show the loading state in your projects.\nSpinners can be used as a"),Object(t.mdx)(o.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"animations"},"Animations"),Object(t.mdx)("p",null,"Bootstrap offers two animation styles for spinners. The animation style\ncan be configured with the ",Object(t.mdx)("inlineCode",{parentName:"p"},"animation")," property. An animation style\nmust always be provided when creating a spinner."),Object(t.mdx)("p",null,Object(t.mdx)("strong",{parentName:"p"}," Border Spinner - ",Object(t.mdx)("inlineCode",{parentName:"strong"},"border"))),Object(t.mdx)(o.a,{codeText:m.a,mdxType:"ReactPlayground"}),Object(t.mdx)("p",null,Object(t.mdx)("strong",{parentName:"p"}," Grow Spinner - ",Object(t.mdx)("inlineCode",{parentName:"strong"},"grow")," ")),Object(t.mdx)(o.a,{codeText:l.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"variants"},"Variants"),Object(t.mdx)("p",null,"All standard visual variants are available for both animation styles by\nsetting the ",Object(t.mdx)("inlineCode",{parentName:"p"},"variant")," property. Alternatively spinners can be custom\nsized with the ",Object(t.mdx)("inlineCode",{parentName:"p"},"style")," property, or custom CSS classes."),Object(t.mdx)(o.a,{codeText:u.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"sizing"},"Sizing"),Object(t.mdx)("p",null,"In addition to the standard size, a smaller additional preconfigured\nsize is available by configuring the ",Object(t.mdx)("inlineCode",{parentName:"p"},"size")," property to ",Object(t.mdx)("inlineCode",{parentName:"p"},"sm"),"."),Object(t.mdx)(o.a,{codeText:y.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"buttons"},"Buttons"),Object(t.mdx)("p",null,"Like the original Bootstrap spinners, these can also be used with\nbuttons. To use this component out-of-the-box it is recommended you\nchange the element type to ",Object(t.mdx)("inlineCode",{parentName:"p"},"span")," by configuring the ",Object(t.mdx)("inlineCode",{parentName:"p"},"as")," property when\nusing spinners inside buttons."),Object(t.mdx)(o.a,{codeText:j.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"accessibility"},"Accessibility"),Object(t.mdx)("p",null,"To ensure the maximum accessibility for spinner components it is\nrecommended you provide a relevant ARIA ",Object(t.mdx)("inlineCode",{parentName:"p"},"role")," property,\nand include screenreader-only readable text representation of the\nspinner's meaning inside the component using Bootstrap's ",Object(t.mdx)("inlineCode",{parentName:"p"},"sr-only"),"\nclass."),Object(t.mdx)("p",null,"The example below provides an example of accessible usage of this\ncomponent."),Object(t.mdx)(o.a,{codeText:d.a,mdxType:"ReactPlayground"}),Object(t.mdx)("h2",{id:"api"},"API"),Object(t.mdx)(r.a,{metadata:a.data.metadata,mdxType:"ComponentApi"}))}v.isMDXComponent=!0},1313:function(n,e){n.exports='<Spinner animation="border" role="status">\n  <span className="sr-only">Loading...</span>\n</Spinner>;\n'},1314:function(n,e){n.exports='<Spinner animation="border" />;\n'},1315:function(n,e){n.exports='<Spinner animation="grow" />;\n'},1316:function(n,e){n.exports='<>\n  <Spinner animation="border" variant="primary" />\n  <Spinner animation="border" variant="secondary" />\n  <Spinner animation="border" variant="success" />\n  <Spinner animation="border" variant="danger" />\n  <Spinner animation="border" variant="warning" />\n  <Spinner animation="border" variant="info" />\n  <Spinner animation="border" variant="light" />\n  <Spinner animation="border" variant="dark" />\n  <Spinner animation="grow" variant="primary" />\n  <Spinner animation="grow" variant="secondary" />\n  <Spinner animation="grow" variant="success" />\n  <Spinner animation="grow" variant="danger" />\n  <Spinner animation="grow" variant="warning" />\n  <Spinner animation="grow" variant="info" />\n  <Spinner animation="grow" variant="light" />\n  <Spinner animation="grow" variant="dark" />\n</>;\n'},1317:function(n,e){n.exports='<>\n  <Spinner animation="border" size="sm" />\n  <Spinner animation="border" />\n  <Spinner animation="grow" size="sm" />\n  <Spinner animation="grow" />\n</>;\n'},1318:function(n,e){n.exports='<ButtonToolbar>\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="border"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    <span className="sr-only">Loading...</span>\n  </Button>\n  <Button variant="primary" disabled>\n    <Spinner\n      as="span"\n      animation="grow"\n      size="sm"\n      role="status"\n      aria-hidden="true"\n    />\n    Loading...\n  </Button>\n</ButtonToolbar>;\n'}}]);
//# sourceMappingURL=component---src-pages-components-spinners-mdx-8a04e72804179752adf9.js.map