webpackJsonp(["component---src-pages-components-button-group-js"],{"./node_modules/babel-loader/lib/index.js??ref--0-0!./src/pages/components/button-group.js":function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){var e=t.data;return u.a.createElement("div",{className:"bs-docs-section"},u.a.createElement("h2",{className:"page-header"},u.a.createElement(a.a,{id:"btn-groups"},"Button groups")," ",u.a.createElement("small",null,"ButtonGroup, ButtonToolbar, ToggleButtonGroup, ToggleButton")),u.a.createElement("p",{className:"lead"},"Group a series of buttons together on a single line with the button group."),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-single"},"Basic example")),u.a.createElement("p",null,"Wrap a series of ",u.a.createElement("code",null,"<Button />"),"s in a"," ",u.a.createElement("code",null,"<ButtonGroup />"),"."),u.a.createElement(s.a,{codeText:p.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-toolbar"},"Button toolbar")),u.a.createElement("p",null,"Combine sets of ",u.a.createElement("code",null,"<ButtonGroup />"),"s into a"," ",u.a.createElement("code",null,"<ButtonToolbar />")," for more complex components."),u.a.createElement(s.a,{codeText:B.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-sizing"},"Sizing")),u.a.createElement("p",null,"Instead of applying button sizing props to every button in a group, just add ",u.a.createElement("code",null,"bsSize")," prop to the ",u.a.createElement("code",null,"<ButtonGroup />"),"."),u.a.createElement(s.a,{codeText:m.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-nested"},"Nesting")),u.a.createElement("p",null,"You can place other button types within the"," ",u.a.createElement("code",null,"<ButtonGroup />")," like"," ",u.a.createElement("code",null,"<DropdownButton />"),"s."),u.a.createElement(s.a,{codeText:h.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-vertical"},"Vertical variation")),u.a.createElement("p",null,"Make a set of buttons appear vertically stacked rather than horizontally."," ",u.a.createElement("strong",{className:"text-danger"},"Split button dropdowns are not supported here.")),u.a.createElement("p",null,"Just add ",u.a.createElement("code",null,"vertical")," to the ",u.a.createElement("code",null,"<ButtonGroup />"),"."),u.a.createElement(s.a,{codeText:E.a}),u.a.createElement("br",null),u.a.createElement("p",null,"Moreover, you can have buttons be block level elements so they take the full width of their container, just add ",u.a.createElement("code",null,"block")," to the"," ",u.a.createElement("code",null,"<ButtonGroup />"),", in addition to the"," ",u.a.createElement("code",null,"vertical")," you just added."),u.a.createElement(s.a,{codeText:G.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-justified"},"Justified button groups")),u.a.createElement("p",null,"Make a group of buttons stretch at equal sizes to span the entire width of its parent. Also works with button dropdowns within the button group."),u.a.createElement("div",{className:"bs-callout bs-callout-warning"},u.a.createElement("h4",null,"Style issues"),u.a.createElement("p",null,"There are some issues and workarounds required when using this property, please see"," ",u.a.createElement("a",{href:"http://getbootstrap.com/components/#btn-groups-justified"},"bootstrapâ€™s button group docs")," ","for more specifics.")),u.a.createElement("p",null,"Just add ",u.a.createElement("code",null,"justified")," to the ",u.a.createElement("code",null,"<ButtonGroup />"),"."),u.a.createElement(s.a,{codeText:v.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-checkbox-radio"},"Checkbox / Radio")),u.a.createElement("p",null,"For checkboxes or radio buttons styled as Bootstrap buttons, use the",u.a.createElement("code",null,"<ToggleButtonGroup>")," and ",u.a.createElement("code",null,"<ToggleButton>"),"components. The group behaves as a form component, where the value is an array of the selected ",u.a.createElement("code",null,"eventKey"),"s for checkbox groups or the selected ",u.a.createElement("code",null,"eventKey")," for radio groups."),u.a.createElement("div",{className:"bs-callout bs-callout-warning"},u.a.createElement("h4",null,"Bootstrap JS issue"),u.a.createElement("p",null,"There is a known"," ",u.a.createElement("a",{href:"https://github.com/react-bootstrap/react-bootstrap/issues/2774"},"issue")," ","when including Bootstrap JS while using Toggle Button Groups. Therefore it is advised not use Bootstrap JS in conjunction with"," ",u.a.createElement("code",null,"<ToggleButtonGroup>")," and"," ",u.a.createElement("code",null,"<ToggleButton>"),".")),u.a.createElement("h4",null,"Uncontrolled"),u.a.createElement(s.a,{codeText:j.a}),u.a.createElement("h4",null,"Controlled"),u.a.createElement(s.a,{codeText:w.a}),u.a.createElement("h3",null,u.a.createElement(a.a,{id:"btn-groups-props"},"Props")),u.a.createElement("h4",null,u.a.createElement(a.a,{id:"btn-groups-group-props"},"ButtonGroup"),u.a.createElement(l.a,{component:e.ButtonGroup.displayName})),u.a.createElement(r.a,{metadata:e.ButtonGroup}),u.a.createElement("h4",null,u.a.createElement(a.a,{id:"btn-groups-toolbar-props"},"ButtonToolbar"),u.a.createElement(l.a,{component:e.ButtonToolbar.displayName})),u.a.createElement(r.a,{metadata:e.ButtonToolbar}),u.a.createElement("h4",null,u.a.createElement(a.a,{id:"btn-groups-toggle-group-props"},"ToggleButtonGroup"),u.a.createElement(l.a,{component:e.ToggleButtonGroup.displayName})),u.a.createElement(r.a,{metadata:e.ToggleButtonGroup}),u.a.createElement("h4",null,u.a.createElement(a.a,{id:"btn-groups-toggle-btn-props"},"ToggleButton"),u.a.createElement(l.a,{component:e.ToggleButton.displayName})),u.a.createElement(r.a,{metadata:e.ToggleButton}))},n.d(e,"query",function(){return y});var o=n("./node_modules/react/index.js"),u=n.n(o),a=n("./src/components/Anchor.js"),l=n("./src/components/LinkToSource.js"),r=n("./src/components/PropTable.js"),s=n("./src/components/ReactPlayground.js"),c=n("./src/examples/ButtonGroupBasic.js"),p=n.n(c),d=n("./src/examples/ButtonToolbarBasic.js"),B=n.n(d),i=n("./src/examples/ButtonGroupSizes.js"),m=n.n(i),g=n("./src/examples/ButtonGroupNested.js"),h=n.n(g),b=n("./src/examples/ButtonGroupVertical.js"),E=n.n(b),T=n("./src/examples/ButtonGroupBlock.js"),G=n.n(T),x=n("./src/examples/ButtonGroupJustified.js"),v=n.n(x),f=n("./src/examples/ToggleButtonGroupControlled.js"),w=n.n(f),k=n("./src/examples/ToggleButtonGroupUncontrolled.js"),j=n.n(k);var y="** extracted graphql fragment **"},"./src/examples/ButtonGroupBasic.js":function(t,e){t.exports="<ButtonGroup>\n  <Button>Left</Button>\n  <Button>Middle</Button>\n  <Button>Right</Button>\n</ButtonGroup>;\n"},"./src/examples/ButtonGroupBlock.js":function(t,e){t.exports="<ButtonGroup vertical block>\n  <Button>Full width button</Button>\n  <Button>Full width button</Button>\n</ButtonGroup>;\n"},"./src/examples/ButtonGroupJustified.js":function(t,e){t.exports='<ButtonGroup justified>\n  <Button href="#">Left</Button>\n  <Button href="#">Middle</Button>\n  <DropdownButton title="Dropdown" id="bg-justified-dropdown">\n    <MenuItem eventKey="1">Dropdown link</MenuItem>\n    <MenuItem eventKey="2">Dropdown link</MenuItem>\n  </DropdownButton>\n</ButtonGroup>;\n'},"./src/examples/ButtonGroupNested.js":function(t,e){t.exports='<ButtonGroup>\n  <Button>1</Button>\n  <Button>2</Button>\n  <DropdownButton title="Dropdown" id="bg-nested-dropdown">\n    <MenuItem eventKey="1">Dropdown link</MenuItem>\n    <MenuItem eventKey="2">Dropdown link</MenuItem>\n  </DropdownButton>\n</ButtonGroup>;\n'},"./src/examples/ButtonGroupSizes.js":function(t,e){t.exports='<div>\n  <ButtonToolbar>\n    <ButtonGroup bsSize="large">\n      <Button>Left</Button>\n      <Button>Middle</Button>\n      <Button>Right</Button>\n    </ButtonGroup>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <ButtonGroup>\n      <Button>Left</Button>\n      <Button>Middle</Button>\n      <Button>Right</Button>\n    </ButtonGroup>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <ButtonGroup bsSize="small">\n      <Button>Left</Button>\n      <Button>Middle</Button>\n      <Button>Right</Button>\n    </ButtonGroup>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <ButtonGroup bsSize="xsmall">\n      <Button>Left</Button>\n      <Button>Middle</Button>\n      <Button>Right</Button>\n    </ButtonGroup>\n  </ButtonToolbar>\n</div>;\n'},"./src/examples/ButtonGroupVertical.js":function(t,e){t.exports='<ButtonGroup vertical>\n  <Button>Button</Button>\n  <Button>Button</Button>\n  <DropdownButton title="Dropdown" id="bg-vertical-dropdown-1">\n    <MenuItem eventKey="1">Dropdown link</MenuItem>\n    <MenuItem eventKey="2">Dropdown link</MenuItem>\n  </DropdownButton>\n  <Button>Button</Button>\n  <Button>Button</Button>\n  <DropdownButton title="Dropdown" id="bg-vertical-dropdown-2">\n    <MenuItem eventKey="1">Dropdown link</MenuItem>\n    <MenuItem eventKey="2">Dropdown link</MenuItem>\n  </DropdownButton>\n  <DropdownButton title="Dropdown" id="bg-vertical-dropdown-3">\n    <MenuItem eventKey="1">Dropdown link</MenuItem>\n    <MenuItem eventKey="2">Dropdown link</MenuItem>\n  </DropdownButton>\n</ButtonGroup>;\n'},"./src/examples/ButtonToolbarBasic.js":function(t,e){t.exports="<ButtonToolbar>\n  <ButtonGroup>\n    <Button>1</Button>\n    <Button>2</Button>\n    <Button>3</Button>\n    <Button>4</Button>\n  </ButtonGroup>\n\n  <ButtonGroup>\n    <Button>5</Button>\n    <Button>6</Button>\n    <Button>7</Button>\n  </ButtonGroup>\n\n  <ButtonGroup>\n    <Button>8</Button>\n  </ButtonGroup>\n</ButtonToolbar>;\n"},"./src/examples/ToggleButtonGroupControlled.js":function(t,e){t.exports='class ToggleButtonGroupControlled extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      value: [1, 3]\n    };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e });\n  }\n\n  render() {\n    return (\n      <ToggleButtonGroup\n        type="checkbox"\n        value={this.state.value}\n        onChange={this.handleChange}\n      >\n        <ToggleButton value={1}>Checkbox 1 (pre-checked)</ToggleButton>\n        <ToggleButton value={2}>Checkbox 2</ToggleButton>\n        <ToggleButton value={3}>Checkbox 3 (pre-checked)</ToggleButton>\n        <ToggleButton value={4} disabled>\n          Checkbox 4 (disabled)\n        </ToggleButton>\n      </ToggleButtonGroup>\n    );\n  }\n}\n\nrender(<ToggleButtonGroupControlled />);\n'},"./src/examples/ToggleButtonGroupUncontrolled.js":function(t,e){t.exports='<div>\n  <ButtonToolbar>\n    <ToggleButtonGroup type="checkbox" defaultValue={[1, 3]}>\n      <ToggleButton value={1}>Checkbox 1 (pre-checked)</ToggleButton>\n      <ToggleButton value={2}>Checkbox 2</ToggleButton>\n      <ToggleButton value={3}>Checkbox 3 (pre-checked)</ToggleButton>\n    </ToggleButtonGroup>\n  </ButtonToolbar>\n\n  <ButtonToolbar>\n    <ToggleButtonGroup type="radio" name="options" defaultValue={1}>\n      <ToggleButton value={1}>Radio 1 (pre-checked)</ToggleButton>\n      <ToggleButton value={2}>Radio 2</ToggleButton>\n      <ToggleButton value={3}>Radio 3</ToggleButton>\n    </ToggleButtonGroup>\n  </ButtonToolbar>\n</div>;\n'}});
//# sourceMappingURL=component---src-pages-components-button-group-js-552db10a9ebed68c7377.js.map